// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="xDBL,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.429250,HLS_SYN_LAT=589,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=350,HLS_SYN_FF=170893,HLS_SYN_LUT=25271,HLS_VERSION=2019_1}" *)

module xDBL (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        P_X_V_address0,
        P_X_V_ce0,
        P_X_V_q0,
        P_X_V_address1,
        P_X_V_ce1,
        P_X_V_q1,
        P_Z_V_address0,
        P_Z_V_ce0,
        P_Z_V_q0,
        P_Z_V_address1,
        P_Z_V_ce1,
        P_Z_V_q1,
        Q_X_V_address0,
        Q_X_V_ce0,
        Q_X_V_we0,
        Q_X_V_d0,
        Q_X_V_address1,
        Q_X_V_ce1,
        Q_X_V_we1,
        Q_X_V_d1,
        Q_Z_V_address0,
        Q_Z_V_ce0,
        Q_Z_V_we0,
        Q_Z_V_d0,
        Q_Z_V_address1,
        Q_Z_V_ce1,
        Q_Z_V_we1,
        Q_Z_V_d1,
        A24plus_V_address0,
        A24plus_V_ce0,
        A24plus_V_q0,
        C24_V_address0,
        C24_V_ce0,
        C24_V_q0
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_state2 = 19'd2;
parameter    ap_ST_fsm_state3 = 19'd4;
parameter    ap_ST_fsm_state4 = 19'd8;
parameter    ap_ST_fsm_state5 = 19'd16;
parameter    ap_ST_fsm_state6 = 19'd32;
parameter    ap_ST_fsm_state7 = 19'd64;
parameter    ap_ST_fsm_state8 = 19'd128;
parameter    ap_ST_fsm_state9 = 19'd256;
parameter    ap_ST_fsm_state10 = 19'd512;
parameter    ap_ST_fsm_state11 = 19'd1024;
parameter    ap_ST_fsm_state12 = 19'd2048;
parameter    ap_ST_fsm_state13 = 19'd4096;
parameter    ap_ST_fsm_state14 = 19'd8192;
parameter    ap_ST_fsm_state15 = 19'd16384;
parameter    ap_ST_fsm_state16 = 19'd32768;
parameter    ap_ST_fsm_state17 = 19'd65536;
parameter    ap_ST_fsm_state18 = 19'd131072;
parameter    ap_ST_fsm_state19 = 19'd262144;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [0:0] P_X_V_address0;
output   P_X_V_ce0;
input  [447:0] P_X_V_q0;
output  [0:0] P_X_V_address1;
output   P_X_V_ce1;
input  [447:0] P_X_V_q1;
output  [0:0] P_Z_V_address0;
output   P_Z_V_ce0;
input  [447:0] P_Z_V_q0;
output  [0:0] P_Z_V_address1;
output   P_Z_V_ce1;
input  [447:0] P_Z_V_q1;
output  [0:0] Q_X_V_address0;
output   Q_X_V_ce0;
output   Q_X_V_we0;
output  [447:0] Q_X_V_d0;
output  [0:0] Q_X_V_address1;
output   Q_X_V_ce1;
output   Q_X_V_we1;
output  [447:0] Q_X_V_d1;
output  [0:0] Q_Z_V_address0;
output   Q_Z_V_ce0;
output   Q_Z_V_we0;
output  [447:0] Q_Z_V_d0;
output  [0:0] Q_Z_V_address1;
output   Q_Z_V_ce1;
output   Q_Z_V_we1;
output  [447:0] Q_Z_V_d1;
output  [0:0] A24plus_V_address0;
output   A24plus_V_ce0;
input  [447:0] A24plus_V_q0;
output  [0:0] C24_V_address0;
output   C24_V_ce0;
input  [447:0] C24_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg P_X_V_ce0;
reg P_X_V_ce1;
reg P_Z_V_ce0;
reg P_Z_V_ce1;
reg Q_X_V_ce0;
reg Q_X_V_we0;
reg Q_X_V_ce1;
reg Q_X_V_we1;
reg[0:0] Q_Z_V_address0;
reg Q_Z_V_ce0;
reg Q_Z_V_we0;
reg[447:0] Q_Z_V_d0;
reg[0:0] Q_Z_V_address1;
reg Q_Z_V_ce1;
reg Q_Z_V_we1;
reg[447:0] Q_Z_V_d1;
reg[0:0] A24plus_V_address0;
reg A24plus_V_ce0;
reg[0:0] C24_V_address0;
reg C24_V_ce0;

(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [834:0] grp_mp_mul_fu_202_ap_return;
reg   [834:0] reg_314;
wire    ap_CS_fsm_state5;
wire    grp_mp_mul_fu_202_ap_ready;
wire    grp_mp_mul_fu_202_ap_done;
wire    ap_CS_fsm_state8;
wire    grp_rdc_mont_fu_292_ap_ready;
wire    grp_rdc_mont_fu_292_ap_done;
reg    ap_block_state8_on_subcall_done;
wire    ap_CS_fsm_state10;
wire   [447:0] grp_rdc_mont_fu_292_ap_return;
reg   [447:0] reg_318;
wire    ap_CS_fsm_state7;
wire    grp_mp_mul_fu_203_ap_ready;
wire    grp_mp_mul_fu_203_ap_done;
wire    grp_rdc_mont_fu_298_ap_ready;
wire    grp_rdc_mont_fu_298_ap_done;
wire    grp_rdc_mont_fu_303_ap_ready;
wire    grp_rdc_mont_fu_303_ap_done;
reg    ap_block_state7_on_subcall_done;
wire    ap_CS_fsm_state13;
reg    ap_block_state13_on_subcall_done;
wire    ap_CS_fsm_state2;
wire   [447:0] grp_fu_325_p2;
wire    ap_CS_fsm_state3;
wire   [447:0] grp_fu_331_p2;
wire   [447:0] grp_fu_337_p2;
reg   [447:0] add_ln209_reg_630;
wire   [447:0] grp_fu_343_p2;
reg   [447:0] add_ln209_1_reg_637;
wire   [447:0] grp_fu_349_p2;
reg   [447:0] add_ln214_reg_644;
wire    ap_CS_fsm_state4;
wire   [447:0] grp_fu_355_p2;
reg   [447:0] add_ln214_1_reg_651;
wire   [447:0] grp_fu_361_p2;
wire   [447:0] t3_V_1_fu_385_p2;
reg   [447:0] t3_V_1_reg_663;
wire   [447:0] grp_fu_367_p2;
wire   [447:0] t3_V_fu_403_p2;
reg   [447:0] t3_V_reg_673;
wire   [447:0] grp_fu_373_p2;
reg   [447:0] t1_V_1_reg_678;
wire   [447:0] grp_fu_378_p2;
reg   [447:0] add_ln214_3_reg_683;
wire   [447:0] grp_fu_391_p2;
reg   [447:0] t1_V_reg_688;
wire    ap_CS_fsm_state6;
reg    ap_block_state6_on_subcall_done;
wire   [447:0] grp_fu_396_p2;
reg   [447:0] add_ln214_2_reg_693;
wire   [836:0] zext_ln87_1_fu_409_p1;
reg   [836:0] zext_ln87_1_reg_698;
wire   [836:0] zext_ln87_2_fu_414_p1;
reg   [836:0] zext_ln87_2_reg_703;
wire   [836:0] zext_ln87_3_fu_419_p1;
reg   [836:0] zext_ln87_3_reg_708;
wire   [836:0] zext_ln87_fu_424_p1;
reg   [836:0] zext_ln87_reg_723;
wire   [447:0] grp_rdc_mont_fu_298_ap_return;
reg   [447:0] call_ret3_reg_728;
wire   [447:0] grp_rdc_mont_fu_303_ap_return;
reg   [447:0] call_ret4_reg_735;
reg   [447:0] C24_V_load_1_reg_742;
reg   [447:0] call_ret1_reg_748;
reg   [447:0] C24_V_load_reg_755;
wire   [447:0] grp_fu_429_p2;
wire    ap_CS_fsm_state9;
wire   [447:0] grp_fu_435_p2;
reg   [447:0] t1_V_2_reg_776;
wire   [447:0] grp_fu_440_p2;
reg   [447:0] t2_V_reg_781;
wire   [447:0] grp_fu_446_p2;
wire   [447:0] grp_fu_451_p2;
reg   [447:0] add_ln214_5_reg_801;
reg   [447:0] A24plus_V_load_1_reg_808;
wire   [835:0] grp_fu_466_p2;
reg   [835:0] tt3_V_reg_814;
wire   [447:0] grp_fu_472_p2;
reg   [447:0] add_ln214_4_reg_819;
reg   [447:0] A24plus_V_load_reg_825;
wire   [447:0] grp_fu_479_p2;
reg   [447:0] t1_V_4_reg_831;
wire    ap_CS_fsm_state11;
wire  signed [836:0] sext_ln183_fu_498_p1;
reg  signed [836:0] sext_ln183_reg_846;
wire    ap_CS_fsm_state12;
wire  signed [836:0] sext_ln183_2_fu_503_p1;
reg  signed [836:0] sext_ln183_2_reg_852;
reg   [447:0] call_ret6_reg_857;
reg   [447:0] call_ret9_reg_865;
wire   [0:0] Q_Z_V_addr_reg_871;
wire    ap_CS_fsm_state14;
reg    ap_block_state14_on_subcall_done;
wire   [0:0] Q_Z_V_addr_1_reg_877;
wire   [447:0] grp_fu_508_p2;
reg   [447:0] t1_V_3_reg_883;
wire   [447:0] grp_fu_512_p2;
reg   [447:0] t2_V_1_reg_898;
wire    ap_CS_fsm_state15;
wire  signed [836:0] sext_ln183_1_fu_546_p1;
reg  signed [836:0] sext_ln183_1_reg_903;
wire   [447:0] grp_fu_532_p2;
reg   [447:0] t2_V_2_reg_909;
wire   [447:0] grp_fu_537_p2;
reg   [447:0] add_ln209_10_reg_914;
wire   [447:0] grp_fu_541_p2;
reg   [447:0] add_ln209_11_reg_921;
wire   [447:0] grp_fu_552_p2;
reg   [447:0] t1_V_5_reg_928;
wire    ap_CS_fsm_state17;
reg    ap_block_state17_on_subcall_done;
wire  signed [836:0] sext_ln183_3_fu_570_p1;
reg  signed [836:0] sext_ln183_3_reg_943;
wire    ap_CS_fsm_state18;
wire    grp_mp_mul_fu_202_ap_start;
wire    grp_mp_mul_fu_202_ap_idle;
reg   [447:0] grp_mp_mul_fu_202_a_V;
reg   [447:0] grp_mp_mul_fu_202_b_V;
wire    grp_mp_mul_fu_203_ap_start;
wire    grp_mp_mul_fu_203_ap_idle;
reg   [447:0] grp_mp_mul_fu_203_a_V;
reg   [447:0] grp_mp_mul_fu_203_b_V;
wire   [834:0] grp_mp_mul_fu_203_ap_return;
wire    grp_rdc_mont_fu_292_ap_start;
wire    grp_rdc_mont_fu_292_ap_idle;
reg   [836:0] grp_rdc_mont_fu_292_ma_V;
wire    grp_rdc_mont_fu_298_ap_start;
wire    grp_rdc_mont_fu_298_ap_idle;
reg   [836:0] grp_rdc_mont_fu_298_ma_V;
wire    grp_rdc_mont_fu_303_ap_start;
wire    grp_rdc_mont_fu_303_ap_idle;
reg   [836:0] grp_rdc_mont_fu_303_ma_V;
reg    grp_mp_mul_fu_202_ap_start_reg;
wire    ap_CS_fsm_state16;
reg    ap_block_state16_on_subcall_done;
reg    grp_mp_mul_fu_203_ap_start_reg;
wire    ap_CS_fsm_state19;
reg    grp_rdc_mont_fu_292_ap_start_reg;
reg    grp_rdc_mont_fu_298_ap_start_reg;
reg    grp_rdc_mont_fu_303_ap_start_reg;
reg    ap_block_state19_on_subcall_done;
wire   [835:0] grp_fu_466_p0;
wire   [835:0] grp_fu_466_p1;
wire   [835:0] grp_fu_492_p0;
wire   [835:0] grp_fu_492_p1;
wire   [835:0] grp_fu_492_p2;
wire   [835:0] grp_fu_526_p0;
wire   [835:0] grp_fu_526_p1;
wire   [835:0] grp_fu_526_p2;
wire   [835:0] grp_fu_564_p0;
wire   [835:0] grp_fu_564_p1;
wire   [835:0] grp_fu_564_p2;
reg    grp_fu_367_ce;
reg    grp_fu_373_ce;
reg    grp_fu_378_ce;
reg    grp_fu_391_ce;
reg    grp_fu_396_ce;
reg    grp_fu_429_ce;
reg    grp_fu_435_ce;
reg    grp_fu_440_ce;
reg    grp_fu_446_ce;
reg    grp_fu_451_ce;
reg    grp_fu_466_ce;
reg    grp_fu_472_ce;
reg    grp_fu_479_ce;
reg    grp_fu_492_ce;
reg    grp_fu_508_ce;
reg    grp_fu_512_ce;
reg    grp_fu_526_ce;
reg    grp_fu_532_ce;
reg    grp_fu_537_ce;
reg    grp_fu_541_ce;
reg    grp_fu_552_ce;
reg    grp_fu_564_ce;
reg   [18:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'd1;
#0 grp_mp_mul_fu_202_ap_start_reg = 1'b0;
#0 grp_mp_mul_fu_203_ap_start_reg = 1'b0;
#0 grp_rdc_mont_fu_292_ap_start_reg = 1'b0;
#0 grp_rdc_mont_fu_298_ap_start_reg = 1'b0;
#0 grp_rdc_mont_fu_303_ap_start_reg = 1'b0;
end

mp_mul grp_mp_mul_fu_202(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mp_mul_fu_202_ap_start),
    .ap_done(grp_mp_mul_fu_202_ap_done),
    .ap_idle(grp_mp_mul_fu_202_ap_idle),
    .ap_ready(grp_mp_mul_fu_202_ap_ready),
    .a_V(grp_mp_mul_fu_202_a_V),
    .b_V(grp_mp_mul_fu_202_b_V),
    .ap_return(grp_mp_mul_fu_202_ap_return)
);

mp_mul grp_mp_mul_fu_203(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mp_mul_fu_203_ap_start),
    .ap_done(grp_mp_mul_fu_203_ap_done),
    .ap_idle(grp_mp_mul_fu_203_ap_idle),
    .ap_ready(grp_mp_mul_fu_203_ap_ready),
    .a_V(grp_mp_mul_fu_203_a_V),
    .b_V(grp_mp_mul_fu_203_b_V),
    .ap_return(grp_mp_mul_fu_203_ap_return)
);

rdc_mont grp_rdc_mont_fu_292(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_rdc_mont_fu_292_ap_start),
    .ap_done(grp_rdc_mont_fu_292_ap_done),
    .ap_idle(grp_rdc_mont_fu_292_ap_idle),
    .ap_ready(grp_rdc_mont_fu_292_ap_ready),
    .ma_V(grp_rdc_mont_fu_292_ma_V),
    .ap_return(grp_rdc_mont_fu_292_ap_return)
);

rdc_mont grp_rdc_mont_fu_298(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_rdc_mont_fu_298_ap_start),
    .ap_done(grp_rdc_mont_fu_298_ap_done),
    .ap_idle(grp_rdc_mont_fu_298_ap_idle),
    .ap_ready(grp_rdc_mont_fu_298_ap_ready),
    .ma_V(grp_rdc_mont_fu_298_ma_V),
    .ap_return(grp_rdc_mont_fu_298_ap_return)
);

rdc_mont grp_rdc_mont_fu_303(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_rdc_mont_fu_303_ap_start),
    .ap_done(grp_rdc_mont_fu_303_ap_done),
    .ap_idle(grp_rdc_mont_fu_303_ap_idle),
    .ap_ready(grp_rdc_mont_fu_303_ap_ready),
    .ma_V(grp_rdc_mont_fu_303_ma_V),
    .ap_return(grp_rdc_mont_fu_303_ap_return)
);

xDBL_sub_448ns_44lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_sub_448ns_44lbW_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(P_X_V_q0),
    .din1(P_Z_V_q0),
    .ce(1'b1),
    .dout(grp_fu_325_p2)
);

xDBL_sub_448ns_44lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_sub_448ns_44lbW_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(P_X_V_q1),
    .din1(P_Z_V_q1),
    .ce(1'b1),
    .dout(grp_fu_331_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(P_X_V_q0),
    .din1(P_Z_V_q0),
    .ce(1'b1),
    .dout(grp_fu_337_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(P_X_V_q1),
    .din1(P_Z_V_q1),
    .ce(1'b1),
    .dout(grp_fu_343_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(448'd48878847322690443103818290022914987238171560487523193022651614672410442478663953451940433343657236891797438053385769878684629467134),
    .din1(grp_fu_325_p2),
    .ce(1'b1),
    .dout(grp_fu_349_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(448'd48878847322690443103818290022914987238171560487523193022651614672410442478663953451940433343657236891797438053385769878684629467134),
    .din1(grp_fu_331_p2),
    .ce(1'b1),
    .dout(grp_fu_355_p2)
);

xDBL_sub_448ns_44lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_sub_448ns_44lbW_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_337_p2),
    .din1(grp_fu_343_p2),
    .ce(1'b1),
    .dout(grp_fu_361_p2)
);

xDBL_sub_448ns_44lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_sub_448ns_44lbW_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_349_p2),
    .din1(grp_fu_355_p2),
    .ce(grp_fu_367_ce),
    .dout(grp_fu_367_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln209_reg_630),
    .din1(add_ln209_1_reg_637),
    .ce(grp_fu_373_ce),
    .dout(grp_fu_373_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(448'd97757694645380886207636580045829974476343120975046386045303229344820884957327906903880866687314473783594876106771539757369258934268),
    .din1(grp_fu_361_p2),
    .ce(grp_fu_378_ce),
    .dout(grp_fu_378_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln214_reg_644),
    .din1(add_ln214_1_reg_651),
    .ce(grp_fu_391_ce),
    .dout(grp_fu_391_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(448'd97757694645380886207636580045829974476343120975046386045303229344820884957327906903880866687314473783594876106771539757369258934268),
    .din1(grp_fu_367_p2),
    .ce(grp_fu_396_ce),
    .dout(grp_fu_396_p2)
);

xDBL_sub_448ns_44lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_sub_448ns_44lbW_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_rdc_mont_fu_303_ap_return),
    .din1(grp_rdc_mont_fu_292_ap_return),
    .ce(grp_fu_429_ce),
    .dout(grp_fu_429_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(C24_V_q0),
    .din1(C24_V_load_1_reg_742),
    .ce(grp_fu_435_ce),
    .dout(grp_fu_435_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_rdc_mont_fu_292_ap_return),
    .din1(reg_318),
    .ce(grp_fu_440_ce),
    .dout(grp_fu_440_p2)
);

xDBL_sub_448ns_44lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_sub_448ns_44lbW_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(call_ret3_reg_728),
    .din1(grp_rdc_mont_fu_292_ap_return),
    .ce(grp_fu_446_ce),
    .dout(grp_fu_446_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(448'd48878847322690443103818290022914987238171560487523193022651614672410442478663953451940433343657236891797438053385769878684629467134),
    .din1(grp_fu_429_p2),
    .ce(grp_fu_451_ce),
    .dout(grp_fu_451_p2)
);

xDBL_sub_836ns_83ncg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 836 ),
    .din1_WIDTH( 836 ),
    .dout_WIDTH( 836 ))
xDBL_sub_836ns_83ncg_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_466_p0),
    .din1(grp_fu_466_p1),
    .ce(grp_fu_466_ce),
    .dout(grp_fu_466_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(448'd48878847322690443103818290022914987238171560487523193022651614672410442478663953451940433343657236891797438053385769878684629467134),
    .din1(grp_fu_446_p2),
    .ce(grp_fu_472_ce),
    .dout(grp_fu_472_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(A24plus_V_q0),
    .din1(A24plus_V_load_1_reg_808),
    .ce(grp_fu_479_ce),
    .dout(grp_fu_479_p2)
);

xDBL_sub_836ns_83ncg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 836 ),
    .din1_WIDTH( 836 ),
    .dout_WIDTH( 836 ))
xDBL_sub_836ns_83ncg_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_492_p0),
    .din1(grp_fu_492_p1),
    .ce(grp_fu_492_ce),
    .dout(grp_fu_492_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(call_ret3_reg_728),
    .din1(call_ret4_reg_735),
    .ce(grp_fu_508_ce),
    .dout(grp_fu_508_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U69(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(call_ret6_reg_857),
    .din1(reg_318),
    .ce(grp_fu_512_ce),
    .dout(grp_fu_512_p2)
);

xDBL_sub_836ns_83ncg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 836 ),
    .din1_WIDTH( 836 ),
    .dout_WIDTH( 836 ))
xDBL_sub_836ns_83ncg_U70(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_526_p0),
    .din1(grp_fu_526_p1),
    .ce(grp_fu_526_ce),
    .dout(grp_fu_526_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U71(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln214_4_reg_819),
    .din1(add_ln214_5_reg_801),
    .ce(grp_fu_532_ce),
    .dout(grp_fu_532_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U72(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(call_ret6_reg_857),
    .din1(call_ret9_reg_865),
    .ce(grp_fu_537_ce),
    .dout(grp_fu_537_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U73(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_318),
    .din1(call_ret9_reg_865),
    .ce(grp_fu_541_ce),
    .dout(grp_fu_541_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln209_10_reg_914),
    .din1(add_ln209_11_reg_921),
    .ce(grp_fu_552_ce),
    .dout(grp_fu_552_p2)
);

xDBL_sub_836ns_83ncg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 836 ),
    .din1_WIDTH( 836 ),
    .dout_WIDTH( 836 ))
xDBL_sub_836ns_83ncg_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_564_p0),
    .din1(grp_fu_564_p1),
    .ce(grp_fu_564_ce),
    .dout(grp_fu_564_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mp_mul_fu_202_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state4) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16)) | ((1'b1 == ap_CS_fsm_state9) & (grp_mp_mul_fu_203_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_on_subcall_done)) | ((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7_on_subcall_done)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
            grp_mp_mul_fu_202_ap_start_reg <= 1'b1;
        end else if ((grp_mp_mul_fu_202_ap_ready == 1'b1)) begin
            grp_mp_mul_fu_202_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mp_mul_fu_203_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16)) | ((1'b0 == ap_block_state6_on_subcall_done) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_on_subcall_done)) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8_on_subcall_done)))) begin
            grp_mp_mul_fu_203_ap_start_reg <= 1'b1;
        end else if ((grp_mp_mul_fu_203_ap_ready == 1'b1)) begin
            grp_mp_mul_fu_203_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_rdc_mont_fu_292_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | ((1'b0 == ap_block_state6_on_subcall_done) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7_on_subcall_done)))) begin
            grp_rdc_mont_fu_292_ap_start_reg <= 1'b1;
        end else if ((grp_rdc_mont_fu_292_ap_ready == 1'b1)) begin
            grp_rdc_mont_fu_292_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_rdc_mont_fu_298_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state12) | ((1'b0 == ap_block_state6_on_subcall_done) & (1'b1 == ap_CS_fsm_state6)))) begin
            grp_rdc_mont_fu_298_ap_start_reg <= 1'b1;
        end else if ((grp_rdc_mont_fu_298_ap_ready == 1'b1)) begin
            grp_rdc_mont_fu_298_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_rdc_mont_fu_303_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state12) | ((1'b0 == ap_block_state6_on_subcall_done) & (1'b1 == ap_CS_fsm_state6)))) begin
            grp_rdc_mont_fu_303_ap_start_reg <= 1'b1;
        end else if ((grp_rdc_mont_fu_303_ap_ready == 1'b1)) begin
            grp_rdc_mont_fu_303_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (grp_mp_mul_fu_203_ap_done == 1'b1))) begin
        A24plus_V_load_1_reg_808 <= A24plus_V_q0;
        add_ln214_5_reg_801 <= grp_fu_451_p2;
        t1_V_2_reg_776 <= grp_fu_435_p2;
        t2_V_reg_781 <= grp_fu_440_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        A24plus_V_load_reg_825 <= A24plus_V_q0;
        add_ln214_4_reg_819 <= grp_fu_472_p2;
        tt3_V_reg_814 <= grp_fu_466_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7_on_subcall_done))) begin
        C24_V_load_1_reg_742 <= C24_V_q0;
        call_ret3_reg_728 <= grp_rdc_mont_fu_298_ap_return;
        call_ret4_reg_735 <= grp_rdc_mont_fu_303_ap_return;
        zext_ln87_reg_723[834 : 0] <= zext_ln87_fu_424_p1[834 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8_on_subcall_done))) begin
        C24_V_load_reg_755 <= C24_V_q0;
        call_ret1_reg_748 <= grp_rdc_mont_fu_292_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        add_ln209_10_reg_914 <= grp_fu_537_p2;
        add_ln209_11_reg_921 <= grp_fu_541_p2;
        sext_ln183_1_reg_903 <= sext_ln183_1_fu_546_p1;
        t2_V_1_reg_898 <= grp_fu_512_p2;
        t2_V_2_reg_909 <= grp_fu_532_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln209_1_reg_637 <= grp_fu_343_p2;
        add_ln209_reg_630 <= grp_fu_337_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        add_ln214_1_reg_651 <= grp_fu_355_p2;
        add_ln214_reg_644 <= grp_fu_349_p2;
        t3_V_1_reg_663[447 : 1] <= t3_V_1_fu_385_p2[447 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state6_on_subcall_done) & (1'b1 == ap_CS_fsm_state6))) begin
        add_ln214_2_reg_693 <= grp_fu_396_p2;
        t1_V_reg_688 <= grp_fu_391_p2;
        zext_ln87_1_reg_698[834 : 0] <= zext_ln87_1_fu_409_p1[834 : 0];
        zext_ln87_2_reg_703[834 : 0] <= zext_ln87_2_fu_414_p1[834 : 0];
        zext_ln87_3_reg_708[834 : 0] <= zext_ln87_3_fu_419_p1[834 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
        add_ln214_3_reg_683 <= grp_fu_378_p2;
        t1_V_1_reg_678 <= grp_fu_373_p2;
        t3_V_reg_673[447 : 1] <= t3_V_fu_403_p2[447 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_on_subcall_done))) begin
        call_ret6_reg_857 <= grp_rdc_mont_fu_298_ap_return;
        call_ret9_reg_865 <= grp_rdc_mont_fu_303_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8_on_subcall_done)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        reg_314 <= grp_mp_mul_fu_202_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_on_subcall_done)) | ((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7_on_subcall_done)))) begin
        reg_318 <= grp_rdc_mont_fu_292_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        sext_ln183_2_reg_852 <= sext_ln183_2_fu_503_p1;
        sext_ln183_reg_846 <= sext_ln183_fu_498_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        sext_ln183_3_reg_943 <= sext_ln183_3_fu_570_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
        t1_V_3_reg_883 <= grp_fu_508_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        t1_V_4_reg_831 <= grp_fu_479_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state17_on_subcall_done) & (1'b1 == ap_CS_fsm_state17))) begin
        t1_V_5_reg_928 <= grp_fu_552_p2;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        A24plus_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        A24plus_V_address0 = 64'd1;
    end else begin
        A24plus_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state9) & (grp_mp_mul_fu_203_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8_on_subcall_done)))) begin
        A24plus_V_ce0 = 1'b1;
    end else begin
        A24plus_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        C24_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        C24_V_address0 = 64'd1;
    end else begin
        C24_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state6_on_subcall_done) & (1'b1 == ap_CS_fsm_state6)) | ((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7_on_subcall_done)))) begin
        C24_V_ce0 = 1'b1;
    end else begin
        C24_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        P_X_V_ce0 = 1'b1;
    end else begin
        P_X_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        P_X_V_ce1 = 1'b1;
    end else begin
        P_X_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        P_Z_V_ce0 = 1'b1;
    end else begin
        P_Z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        P_Z_V_ce1 = 1'b1;
    end else begin
        P_Z_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16))) begin
        Q_X_V_ce0 = 1'b1;
    end else begin
        Q_X_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16))) begin
        Q_X_V_ce1 = 1'b1;
    end else begin
        Q_X_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16))) begin
        Q_X_V_we0 = 1'b1;
    end else begin
        Q_X_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16))) begin
        Q_X_V_we1 = 1'b1;
    end else begin
        Q_X_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        Q_Z_V_address0 = Q_Z_V_addr_1_reg_877;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        Q_Z_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Q_Z_V_address0 = 64'd1;
    end else begin
        Q_Z_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        Q_Z_V_address1 = Q_Z_V_addr_reg_871;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        Q_Z_V_address1 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Q_Z_V_address1 = 64'd0;
    end else begin
        Q_Z_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19)) | ((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16)) | ((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14)))) begin
        Q_Z_V_ce0 = 1'b1;
    end else begin
        Q_Z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19)) | ((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16)) | ((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14)))) begin
        Q_Z_V_ce1 = 1'b1;
    end else begin
        Q_Z_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        Q_Z_V_d0 = grp_rdc_mont_fu_292_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        Q_Z_V_d0 = add_ln209_10_reg_914;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Q_Z_V_d0 = reg_318;
    end else begin
        Q_Z_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        Q_Z_V_d1 = grp_rdc_mont_fu_298_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        Q_Z_V_d1 = add_ln209_11_reg_921;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        Q_Z_V_d1 = call_ret6_reg_857;
    end else begin
        Q_Z_V_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19)) | ((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16)) | ((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14)))) begin
        Q_Z_V_we0 = 1'b1;
    end else begin
        Q_Z_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19)) | ((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16)) | ((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14)))) begin
        Q_Z_V_we1 = 1'b1;
    end else begin
        Q_Z_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)))) begin
        grp_fu_367_ce = 1'b1;
    end else begin
        grp_fu_367_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)))) begin
        grp_fu_373_ce = 1'b1;
    end else begin
        grp_fu_373_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)))) begin
        grp_fu_378_ce = 1'b1;
    end else begin
        grp_fu_378_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((1'b0 == ap_block_state6_on_subcall_done) & (1'b1 == ap_CS_fsm_state6)))) begin
        grp_fu_391_ce = 1'b1;
    end else begin
        grp_fu_391_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5)) | ((1'b0 == ap_block_state6_on_subcall_done) & (1'b1 == ap_CS_fsm_state6)))) begin
        grp_fu_396_ce = 1'b1;
    end else begin
        grp_fu_396_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7_on_subcall_done)) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8_on_subcall_done)))) begin
        grp_fu_429_ce = 1'b1;
    end else begin
        grp_fu_429_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state9) & (grp_mp_mul_fu_203_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8_on_subcall_done)))) begin
        grp_fu_435_ce = 1'b1;
    end else begin
        grp_fu_435_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state9) & (grp_mp_mul_fu_203_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8_on_subcall_done)))) begin
        grp_fu_440_ce = 1'b1;
    end else begin
        grp_fu_440_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state9) & (grp_mp_mul_fu_203_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8_on_subcall_done)))) begin
        grp_fu_446_ce = 1'b1;
    end else begin
        grp_fu_446_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state9) & (grp_mp_mul_fu_203_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8_on_subcall_done)))) begin
        grp_fu_451_ce = 1'b1;
    end else begin
        grp_fu_451_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state9) & (grp_mp_mul_fu_203_ap_done == 1'b1)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_466_ce = 1'b1;
    end else begin
        grp_fu_466_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state9) & (grp_mp_mul_fu_203_ap_done == 1'b1)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_472_ce = 1'b1;
    end else begin
        grp_fu_472_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_479_ce = 1'b1;
    end else begin
        grp_fu_479_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11)))) begin
        grp_fu_492_ce = 1'b1;
    end else begin
        grp_fu_492_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14)) | ((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_on_subcall_done)))) begin
        grp_fu_508_ce = 1'b1;
    end else begin
        grp_fu_508_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14)))) begin
        grp_fu_512_ce = 1'b1;
    end else begin
        grp_fu_512_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14)))) begin
        grp_fu_526_ce = 1'b1;
    end else begin
        grp_fu_526_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14)))) begin
        grp_fu_532_ce = 1'b1;
    end else begin
        grp_fu_532_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14)))) begin
        grp_fu_537_ce = 1'b1;
    end else begin
        grp_fu_537_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14)))) begin
        grp_fu_541_ce = 1'b1;
    end else begin
        grp_fu_541_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16)) | ((1'b0 == ap_block_state17_on_subcall_done) & (1'b1 == ap_CS_fsm_state17)))) begin
        grp_fu_552_ce = 1'b1;
    end else begin
        grp_fu_552_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | ((1'b0 == ap_block_state17_on_subcall_done) & (1'b1 == ap_CS_fsm_state17)))) begin
        grp_fu_564_ce = 1'b1;
    end else begin
        grp_fu_564_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_mp_mul_fu_202_a_V = add_ln209_10_reg_914;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_mp_mul_fu_202_a_V = t1_V_3_reg_883;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_mp_mul_fu_202_a_V = call_ret3_reg_728;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_mp_mul_fu_202_a_V = A24plus_V_load_reg_825;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_mp_mul_fu_202_a_V = A24plus_V_load_1_reg_808;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_mp_mul_fu_202_a_V = C24_V_load_1_reg_742;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_mp_mul_fu_202_a_V = t3_V_reg_673;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_mp_mul_fu_202_a_V = t3_V_1_reg_663;
    end else begin
        grp_mp_mul_fu_202_a_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_mp_mul_fu_202_b_V = t2_V_1_reg_898;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_mp_mul_fu_202_b_V = call_ret6_reg_857;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_mp_mul_fu_202_b_V = add_ln214_4_reg_819;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_mp_mul_fu_202_b_V = add_ln214_5_reg_801;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_mp_mul_fu_202_b_V = reg_318;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_mp_mul_fu_202_b_V = add_ln214_1_reg_651;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_mp_mul_fu_202_b_V = add_ln209_1_reg_637;
    end else begin
        grp_mp_mul_fu_202_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_mp_mul_fu_203_a_V = t1_V_5_reg_928;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_mp_mul_fu_203_a_V = add_ln209_11_reg_921;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_mp_mul_fu_203_a_V = t1_V_4_reg_831;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_mp_mul_fu_203_a_V = call_ret4_reg_735;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_mp_mul_fu_203_a_V = t1_V_2_reg_776;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_mp_mul_fu_203_a_V = C24_V_load_reg_755;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_mp_mul_fu_203_a_V = t1_V_reg_688;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_mp_mul_fu_203_a_V = t1_V_1_reg_678;
    end else begin
        grp_mp_mul_fu_203_a_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_mp_mul_fu_203_b_V = add_ln214_5_reg_801;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_mp_mul_fu_203_b_V = t2_V_2_reg_909;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_mp_mul_fu_203_b_V = reg_318;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_mp_mul_fu_203_b_V = t2_V_reg_781;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_mp_mul_fu_203_b_V = call_ret1_reg_748;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_mp_mul_fu_203_b_V = add_ln214_2_reg_693;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_mp_mul_fu_203_b_V = add_ln214_3_reg_683;
    end else begin
        grp_mp_mul_fu_203_b_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_rdc_mont_fu_292_ma_V = sext_ln183_3_reg_943;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_rdc_mont_fu_292_ma_V = sext_ln183_1_reg_903;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_rdc_mont_fu_292_ma_V = sext_ln183_reg_846;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_rdc_mont_fu_292_ma_V = zext_ln87_reg_723;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_rdc_mont_fu_292_ma_V = zext_ln87_1_reg_698;
    end else begin
        grp_rdc_mont_fu_292_ma_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_rdc_mont_fu_298_ma_V = sext_ln183_3_reg_943;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_rdc_mont_fu_298_ma_V = sext_ln183_1_reg_903;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_rdc_mont_fu_298_ma_V = sext_ln183_reg_846;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_rdc_mont_fu_298_ma_V = zext_ln87_2_reg_703;
    end else begin
        grp_rdc_mont_fu_298_ma_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_rdc_mont_fu_303_ma_V = sext_ln183_2_reg_852;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_rdc_mont_fu_303_ma_V = zext_ln87_3_reg_708;
    end else begin
        grp_rdc_mont_fu_303_ma_V = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            if (((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((1'b0 == ap_block_state6_on_subcall_done) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (1'b0 == ap_block_state8_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (grp_mp_mul_fu_203_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b0 == ap_block_state14_on_subcall_done) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((1'b0 == ap_block_state17_on_subcall_done) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            if (((1'b0 == ap_block_state19_on_subcall_done) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign P_X_V_address0 = 64'd0;

assign P_X_V_address1 = 64'd1;

assign P_Z_V_address0 = 64'd0;

assign P_Z_V_address1 = 64'd1;

assign Q_X_V_address0 = 64'd1;

assign Q_X_V_address1 = 64'd0;

assign Q_X_V_d0 = grp_rdc_mont_fu_292_ap_return;

assign Q_X_V_d1 = grp_rdc_mont_fu_298_ap_return;

assign Q_Z_V_addr_1_reg_877 = 64'd1;

assign Q_Z_V_addr_reg_871 = 64'd0;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state13_on_subcall_done = ((grp_rdc_mont_fu_303_ap_done == 1'b0) | (grp_rdc_mont_fu_298_ap_done == 1'b0) | (grp_mp_mul_fu_203_ap_done == 1'b0) | (grp_rdc_mont_fu_292_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state14_on_subcall_done = ((grp_mp_mul_fu_202_ap_done == 1'b0) | (grp_mp_mul_fu_203_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state16_on_subcall_done = ((grp_mp_mul_fu_202_ap_done == 1'b0) | (grp_rdc_mont_fu_298_ap_done == 1'b0) | (grp_mp_mul_fu_203_ap_done == 1'b0) | (grp_rdc_mont_fu_292_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state17_on_subcall_done = ((grp_mp_mul_fu_202_ap_done == 1'b0) | (grp_mp_mul_fu_203_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state19_on_subcall_done = ((grp_rdc_mont_fu_298_ap_done == 1'b0) | (grp_mp_mul_fu_203_ap_done == 1'b0) | (grp_rdc_mont_fu_292_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state6_on_subcall_done = ((grp_mp_mul_fu_202_ap_done == 1'b0) | (grp_mp_mul_fu_203_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state7_on_subcall_done = ((grp_rdc_mont_fu_303_ap_done == 1'b0) | (grp_rdc_mont_fu_298_ap_done == 1'b0) | (grp_mp_mul_fu_203_ap_done == 1'b0) | (grp_rdc_mont_fu_292_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state8_on_subcall_done = ((grp_mp_mul_fu_202_ap_done == 1'b0) | (grp_rdc_mont_fu_292_ap_done == 1'b0));
end

assign grp_fu_466_p0 = grp_mp_mul_fu_203_ap_return;

assign grp_fu_466_p1 = reg_314;

assign grp_fu_492_p0 = grp_mp_mul_fu_202_ap_return;

assign grp_fu_492_p1 = reg_314;

assign grp_fu_526_p0 = grp_mp_mul_fu_202_ap_return;

assign grp_fu_526_p1 = grp_mp_mul_fu_203_ap_return;

assign grp_fu_564_p0 = grp_mp_mul_fu_202_ap_return;

assign grp_fu_564_p1 = grp_mp_mul_fu_203_ap_return;

assign grp_mp_mul_fu_202_ap_start = grp_mp_mul_fu_202_ap_start_reg;

assign grp_mp_mul_fu_203_ap_start = grp_mp_mul_fu_203_ap_start_reg;

assign grp_rdc_mont_fu_292_ap_start = grp_rdc_mont_fu_292_ap_start_reg;

assign grp_rdc_mont_fu_298_ap_start = grp_rdc_mont_fu_298_ap_start_reg;

assign grp_rdc_mont_fu_303_ap_start = grp_rdc_mont_fu_303_ap_start_reg;

assign sext_ln183_1_fu_546_p1 = $signed(grp_fu_526_p2);

assign sext_ln183_2_fu_503_p1 = $signed(grp_fu_492_p2);

assign sext_ln183_3_fu_570_p1 = $signed(grp_fu_564_p2);

assign sext_ln183_fu_498_p1 = $signed(tt3_V_reg_814);

assign t3_V_1_fu_385_p2 = add_ln209_reg_630 << 448'd1;

assign t3_V_fu_403_p2 = add_ln214_reg_644 << 448'd1;

assign zext_ln87_1_fu_409_p1 = grp_mp_mul_fu_202_ap_return;

assign zext_ln87_2_fu_414_p1 = grp_mp_mul_fu_203_ap_return;

assign zext_ln87_3_fu_419_p1 = reg_314;

assign zext_ln87_fu_424_p1 = grp_mp_mul_fu_203_ap_return;

always @ (posedge ap_clk) begin
    t3_V_1_reg_663[0] <= 1'b0;
    t3_V_reg_673[0] <= 1'b0;
    zext_ln87_1_reg_698[836:835] <= 2'b00;
    zext_ln87_2_reg_703[836:835] <= 2'b00;
    zext_ln87_3_reg_708[836:835] <= 2'b00;
    zext_ln87_reg_723[836:835] <= 2'b00;
end

endmodule //xDBL
