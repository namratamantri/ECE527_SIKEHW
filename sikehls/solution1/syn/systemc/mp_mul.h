// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _mp_mul_HH_
#define _mp_mul_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "koa_mult_h_1.h"
#include "bc_mult_2.h"
#include "bc_mult_1.h"
#include "bc2_mult_1.h"
#include "bc_mult.h"
#include "bc_mult1.h"
#include "bc2_mult.h"
#include "mp_mul_add_339ns_g8j.h"
#include "mp_mul_add_342ns_hbi.h"
#include "mp_mul_add_448s_4ibs.h"
#include "mp_mul_add_450s_4jbC.h"
#include "mp_mul_sub_451ns_kbM.h"
#include "mp_mul_add_896ns_lbW.h"

namespace ap_rtl {

struct mp_mul : public sc_module {
    // Port declarations 10
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<448> > a_V;
    sc_in< sc_lv<448> > b_V;
    sc_out< sc_lv<896> > c_V;
    sc_out< sc_logic > c_V_ap_vld;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    mp_mul(sc_module_name name);
    SC_HAS_PROCESS(mp_mul);

    ~mp_mul();

    sc_trace_file* mVcdFile;

    ofstream mHdltvinHandle;
    ofstream mHdltvoutHandle;
    koa_mult_h_1* grp_koa_mult_h_1_fu_81;
    bc_mult_2* grp_bc_mult_2_fu_86;
    bc_mult_1* grp_bc_mult_1_fu_91;
    bc2_mult_1* grp_bc2_mult_1_fu_96;
    bc_mult* grp_bc_mult_fu_101;
    bc_mult1* grp_bc_mult1_fu_106;
    bc2_mult* grp_bc2_mult_fu_111;
    mp_mul_add_339ns_g8j<1,2,339,339,339>* mp_mul_add_339ns_g8j_U63;
    mp_mul_add_342ns_hbi<1,2,342,342,342>* mp_mul_add_342ns_hbi_U64;
    mp_mul_add_448s_4ibs<1,2,448,448,448>* mp_mul_add_448s_4ibs_U65;
    mp_mul_add_450s_4jbC<1,2,450,450,450>* mp_mul_add_450s_4jbC_U66;
    mp_mul_sub_451ns_kbM<1,2,451,451,451>* mp_mul_sub_451ns_kbM_U67;
    mp_mul_sub_451ns_kbM<1,2,451,451,451>* mp_mul_sub_451ns_kbM_U68;
    mp_mul_add_896ns_lbW<1,2,896,896,896>* mp_mul_add_896ns_lbW_U69;
    sc_signal< sc_lv<11> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<224> > al_V_fu_126_p1;
    sc_signal< sc_lv<224> > al_V_reg_374;
    sc_signal< sc_lv<112> > ah_V_1_reg_379;
    sc_signal< sc_lv<112> > al_V_3_reg_385;
    sc_signal< sc_lv<112> > ah_V_2_reg_391;
    sc_signal< sc_lv<113> > al_V_4_fu_188_p2;
    sc_signal< sc_lv<113> > al_V_4_reg_397;
    sc_signal< sc_lv<113> > ahl_V_2_fu_200_p2;
    sc_signal< sc_lv<113> > ahl_V_2_reg_403;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<114> > ahl_V_3_fu_213_p2;
    sc_signal< sc_lv<114> > ahl_V_3_reg_408;
    sc_signal< sc_lv<224> > grp_bc_mult_fu_101_ap_return;
    sc_signal< sc_lv<224> > a0_V_reg_413;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_logic > grp_bc_mult_fu_101_ap_ready;
    sc_signal< sc_logic > grp_bc_mult_fu_101_ap_done;
    sc_signal< sc_logic > grp_bc_mult1_fu_106_ap_ready;
    sc_signal< sc_logic > grp_bc_mult1_fu_106_ap_done;
    sc_signal< sc_logic > grp_bc_mult_1_fu_91_ap_ready;
    sc_signal< sc_logic > grp_bc_mult_1_fu_91_ap_done;
    sc_signal< sc_logic > grp_koa_mult_h_1_fu_81_ap_ready;
    sc_signal< sc_logic > grp_koa_mult_h_1_fu_81_ap_done;
    sc_signal< sc_logic > grp_bc2_mult_fu_111_ap_ready;
    sc_signal< sc_logic > grp_bc2_mult_fu_111_ap_done;
    sc_signal< sc_logic > grp_bc2_mult_1_fu_96_ap_ready;
    sc_signal< sc_logic > grp_bc2_mult_1_fu_96_ap_done;
    sc_signal< sc_logic > grp_bc_mult_2_fu_86_ap_ready;
    sc_signal< sc_logic > grp_bc_mult_2_fu_86_ap_done;
    sc_signal< bool > ap_block_state3_on_subcall_done;
    sc_signal< sc_lv<224> > grp_bc_mult1_fu_106_ap_return;
    sc_signal< sc_lv<224> > a2_V_reg_419;
    sc_signal< sc_lv<226> > grp_bc_mult_1_fu_91_ap_return;
    sc_signal< sc_lv<226> > a1_V_reg_425;
    sc_signal< sc_lv<448> > grp_koa_mult_h_1_fu_81_ap_return;
    sc_signal< sc_lv<448> > a2_V_1_reg_430;
    sc_signal< sc_lv<224> > grp_bc2_mult_fu_111_ap_return;
    sc_signal< sc_lv<224> > a0_V_2_reg_436;
    sc_signal< sc_lv<226> > grp_bc2_mult_1_fu_96_ap_return;
    sc_signal< sc_lv<226> > a2_V_2_reg_442;
    sc_signal< sc_lv<228> > grp_bc_mult_2_fu_86_ap_return;
    sc_signal< sc_lv<228> > a1_V_1_reg_448;
    sc_signal< sc_lv<227> > ret_V_fu_226_p2;
    sc_signal< sc_lv<227> > ret_V_reg_453;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<229> > ret_V_2_fu_238_p2;
    sc_signal< sc_lv<229> > ret_V_2_reg_458;
    sc_signal< sc_lv<227> > ret_V_1_fu_247_p2;
    sc_signal< sc_lv<227> > ret_V_1_reg_463;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<229> > ret_V_3_fu_255_p2;
    sc_signal< sc_lv<229> > ret_V_3_reg_468;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<448> > grp_fu_303_p2;
    sc_signal< sc_lv<448> > a0_V_1_reg_513;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<451> > grp_fu_334_p2;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > grp_koa_mult_h_1_fu_81_ap_start;
    sc_signal< sc_logic > grp_koa_mult_h_1_fu_81_ap_idle;
    sc_signal< sc_logic > grp_bc_mult_2_fu_86_ap_start;
    sc_signal< sc_logic > grp_bc_mult_2_fu_86_ap_idle;
    sc_signal< sc_logic > grp_bc_mult_1_fu_91_ap_start;
    sc_signal< sc_logic > grp_bc_mult_1_fu_91_ap_idle;
    sc_signal< sc_logic > grp_bc2_mult_1_fu_96_ap_start;
    sc_signal< sc_logic > grp_bc2_mult_1_fu_96_ap_idle;
    sc_signal< sc_logic > grp_bc_mult_fu_101_ap_start;
    sc_signal< sc_logic > grp_bc_mult_fu_101_ap_idle;
    sc_signal< sc_logic > grp_bc_mult1_fu_106_ap_start;
    sc_signal< sc_logic > grp_bc_mult1_fu_106_ap_idle;
    sc_signal< sc_logic > grp_bc2_mult_fu_111_ap_start;
    sc_signal< sc_logic > grp_bc2_mult_fu_111_ap_idle;
    sc_signal< sc_logic > grp_koa_mult_h_1_fu_81_ap_start_reg;
    sc_signal< sc_logic > grp_bc_mult_2_fu_86_ap_start_reg;
    sc_signal< sc_logic > grp_bc_mult_1_fu_91_ap_start_reg;
    sc_signal< sc_logic > grp_bc2_mult_1_fu_96_ap_start_reg;
    sc_signal< sc_logic > grp_bc_mult_fu_101_ap_start_reg;
    sc_signal< sc_logic > grp_bc_mult1_fu_106_ap_start_reg;
    sc_signal< sc_logic > grp_bc2_mult_fu_111_ap_start_reg;
    sc_signal< sc_lv<896> > grp_fu_367_p2;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<224> > ah_V_fu_116_p4;
    sc_signal< sc_lv<225> > sext_ln68_fu_130_p1;
    sc_signal< sc_lv<225> > sext_ln68_1_fu_134_p1;
    sc_signal< sc_lv<225> > ahl_V_fu_152_p2;
    sc_signal< sc_lv<113> > trunc_ln68_fu_148_p1;
    sc_signal< sc_lv<113> > tmp_fu_138_p4;
    sc_signal< sc_lv<113> > sext_ln68_2_fu_194_p1;
    sc_signal< sc_lv<113> > sext_ln68_3_fu_197_p1;
    sc_signal< sc_lv<114> > sext_ln68_5_fu_210_p1;
    sc_signal< sc_lv<114> > sext_ln68_4_fu_207_p1;
    sc_signal< sc_lv<227> > lhs_V_fu_220_p1;
    sc_signal< sc_lv<227> > rhs_V_fu_223_p1;
    sc_signal< sc_lv<229> > lhs_V_1_fu_232_p1;
    sc_signal< sc_lv<229> > rhs_V_1_fu_235_p1;
    sc_signal< sc_lv<227> > sext_ln215_fu_244_p1;
    sc_signal< sc_lv<229> > sext_ln215_3_fu_252_p1;
    sc_signal< sc_lv<339> > grp_fu_270_p0;
    sc_signal< sc_lv<339> > grp_fu_270_p1;
    sc_signal< sc_lv<342> > grp_fu_286_p0;
    sc_signal< sc_lv<342> > grp_fu_286_p1;
    sc_signal< sc_lv<339> > grp_fu_270_p2;
    sc_signal< sc_lv<448> > grp_fu_303_p0;
    sc_signal< sc_lv<448> > grp_fu_303_p1;
    sc_signal< sc_lv<342> > grp_fu_286_p2;
    sc_signal< sc_lv<450> > grp_fu_320_p0;
    sc_signal< sc_lv<450> > grp_fu_320_p1;
    sc_signal< sc_lv<450> > grp_fu_320_p2;
    sc_signal< sc_lv<451> > grp_fu_334_p0;
    sc_signal< sc_lv<451> > grp_fu_334_p1;
    sc_signal< sc_lv<451> > grp_fu_343_p1;
    sc_signal< sc_lv<451> > grp_fu_343_p2;
    sc_signal< sc_lv<675> > r_V_4_fu_349_p3;
    sc_signal< sc_lv<896> > grp_fu_367_p0;
    sc_signal< sc_lv<896> > grp_fu_367_p1;
    sc_signal< sc_lv<11> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<11> ap_ST_fsm_state1;
    static const sc_lv<11> ap_ST_fsm_state2;
    static const sc_lv<11> ap_ST_fsm_state3;
    static const sc_lv<11> ap_ST_fsm_state4;
    static const sc_lv<11> ap_ST_fsm_state5;
    static const sc_lv<11> ap_ST_fsm_state6;
    static const sc_lv<11> ap_ST_fsm_state7;
    static const sc_lv<11> ap_ST_fsm_state8;
    static const sc_lv<11> ap_ST_fsm_state9;
    static const sc_lv<11> ap_ST_fsm_state10;
    static const sc_lv<11> ap_ST_fsm_state11;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const bool ap_const_boolean_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_E0;
    static const sc_lv<32> ap_const_lv32_1BF;
    static const sc_lv<32> ap_const_lv32_150;
    static const sc_lv<32> ap_const_lv32_14F;
    static const sc_lv<32> ap_const_lv32_71;
    static const sc_lv<112> ap_const_lv112_0;
    static const sc_lv<113> ap_const_lv113_0;
    static const sc_lv<224> ap_const_lv224_lc_1;
    static const sc_lv<226> ap_const_lv226_lc_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ah_V_fu_116_p4();
    void thread_ahl_V_2_fu_200_p2();
    void thread_ahl_V_3_fu_213_p2();
    void thread_ahl_V_fu_152_p2();
    void thread_al_V_4_fu_188_p2();
    void thread_al_V_fu_126_p1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_state3_on_subcall_done();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_c_V();
    void thread_c_V_ap_vld();
    void thread_grp_bc2_mult_1_fu_96_ap_start();
    void thread_grp_bc2_mult_fu_111_ap_start();
    void thread_grp_bc_mult1_fu_106_ap_start();
    void thread_grp_bc_mult_1_fu_91_ap_start();
    void thread_grp_bc_mult_2_fu_86_ap_start();
    void thread_grp_bc_mult_fu_101_ap_start();
    void thread_grp_fu_270_p0();
    void thread_grp_fu_270_p1();
    void thread_grp_fu_286_p0();
    void thread_grp_fu_286_p1();
    void thread_grp_fu_303_p0();
    void thread_grp_fu_303_p1();
    void thread_grp_fu_320_p0();
    void thread_grp_fu_320_p1();
    void thread_grp_fu_334_p0();
    void thread_grp_fu_334_p1();
    void thread_grp_fu_343_p1();
    void thread_grp_fu_367_p0();
    void thread_grp_fu_367_p1();
    void thread_grp_koa_mult_h_1_fu_81_ap_start();
    void thread_lhs_V_1_fu_232_p1();
    void thread_lhs_V_fu_220_p1();
    void thread_r_V_4_fu_349_p3();
    void thread_ret_V_1_fu_247_p2();
    void thread_ret_V_2_fu_238_p2();
    void thread_ret_V_3_fu_255_p2();
    void thread_ret_V_fu_226_p2();
    void thread_rhs_V_1_fu_235_p1();
    void thread_rhs_V_fu_223_p1();
    void thread_sext_ln215_3_fu_252_p1();
    void thread_sext_ln215_fu_244_p1();
    void thread_sext_ln68_1_fu_134_p1();
    void thread_sext_ln68_2_fu_194_p1();
    void thread_sext_ln68_3_fu_197_p1();
    void thread_sext_ln68_4_fu_207_p1();
    void thread_sext_ln68_5_fu_210_p1();
    void thread_sext_ln68_fu_130_p1();
    void thread_tmp_fu_138_p4();
    void thread_trunc_ln68_fu_148_p1();
    void thread_ap_NS_fsm();
    void thread_hdltv_gen();
};

}

using namespace ap_rtl;

#endif
