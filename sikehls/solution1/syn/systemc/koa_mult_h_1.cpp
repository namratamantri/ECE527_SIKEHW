// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "koa_mult_h_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic koa_mult_h_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic koa_mult_h_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> koa_mult_h_1::ap_ST_fsm_state1 = "1";
const sc_lv<6> koa_mult_h_1::ap_ST_fsm_state2 = "10";
const sc_lv<6> koa_mult_h_1::ap_ST_fsm_state3 = "100";
const sc_lv<6> koa_mult_h_1::ap_ST_fsm_state4 = "1000";
const sc_lv<6> koa_mult_h_1::ap_ST_fsm_state5 = "10000";
const sc_lv<6> koa_mult_h_1::ap_ST_fsm_state6 = "100000";
const sc_lv<32> koa_mult_h_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> koa_mult_h_1::ap_const_lv32_1 = "1";
const bool koa_mult_h_1::ap_const_boolean_0 = false;
const sc_lv<32> koa_mult_h_1::ap_const_lv32_2 = "10";
const sc_lv<32> koa_mult_h_1::ap_const_lv32_3 = "11";
const sc_lv<32> koa_mult_h_1::ap_const_lv32_4 = "100";
const sc_lv<32> koa_mult_h_1::ap_const_lv32_70 = "1110000";
const sc_lv<32> koa_mult_h_1::ap_const_lv32_DF = "11011111";
const sc_lv<224> koa_mult_h_1::ap_const_lv224_lc_1 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<112> koa_mult_h_1::ap_const_lv112_0 = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<448> koa_mult_h_1::ap_const_lv448_lc_1 = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> koa_mult_h_1::ap_const_lv32_5 = "101";
const bool koa_mult_h_1::ap_const_boolean_1 = true;

koa_mult_h_1::koa_mult_h_1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    grp_bc1_mult_1_fu_30 = new bc1_mult_1("grp_bc1_mult_1_fu_30");
    grp_bc1_mult_1_fu_30->ap_clk(ap_clk);
    grp_bc1_mult_1_fu_30->ap_rst(ap_rst);
    grp_bc1_mult_1_fu_30->ap_start(grp_bc1_mult_1_fu_30_ap_start);
    grp_bc1_mult_1_fu_30->ap_done(grp_bc1_mult_1_fu_30_ap_done);
    grp_bc1_mult_1_fu_30->ap_idle(grp_bc1_mult_1_fu_30_ap_idle);
    grp_bc1_mult_1_fu_30->ap_ready(grp_bc1_mult_1_fu_30_ap_ready);
    grp_bc1_mult_1_fu_30->ta_V(ahl_V_reg_139);
    grp_bc1_mult_1_fu_30->ap_return(grp_bc1_mult_1_fu_30_ap_return);
    grp_bc1_mult_fu_35 = new bc1_mult("grp_bc1_mult_fu_35");
    grp_bc1_mult_fu_35->ap_clk(ap_clk);
    grp_bc1_mult_fu_35->ap_rst(ap_rst);
    grp_bc1_mult_fu_35->ap_start(grp_bc1_mult_fu_35_ap_start);
    grp_bc1_mult_fu_35->ap_done(grp_bc1_mult_fu_35_ap_done);
    grp_bc1_mult_fu_35->ap_idle(grp_bc1_mult_fu_35_ap_idle);
    grp_bc1_mult_fu_35->ap_ready(grp_bc1_mult_fu_35_ap_ready);
    grp_bc1_mult_fu_35->a_V(ah_V_reg_129);
    grp_bc1_mult_fu_35->ap_return(grp_bc1_mult_fu_35_ap_return);
    grp_bc1_mult1_fu_40 = new bc1_mult1("grp_bc1_mult1_fu_40");
    grp_bc1_mult1_fu_40->ap_clk(ap_clk);
    grp_bc1_mult1_fu_40->ap_rst(ap_rst);
    grp_bc1_mult1_fu_40->ap_start(grp_bc1_mult1_fu_40_ap_start);
    grp_bc1_mult1_fu_40->ap_done(grp_bc1_mult1_fu_40_ap_done);
    grp_bc1_mult1_fu_40->ap_idle(grp_bc1_mult1_fu_40_ap_idle);
    grp_bc1_mult1_fu_40->ap_ready(grp_bc1_mult1_fu_40_ap_ready);
    grp_bc1_mult1_fu_40->a_V(al_V_reg_134);
    grp_bc1_mult1_fu_40->ap_return(grp_bc1_mult1_fu_40_ap_return);
    mp_mul_add_448ns_fYi_U41 = new mp_mul_add_448ns_fYi<1,2,448,448,448>("mp_mul_add_448ns_fYi_U41");
    mp_mul_add_448ns_fYi_U41->clk(ap_clk);
    mp_mul_add_448ns_fYi_U41->reset(ap_rst);
    mp_mul_add_448ns_fYi_U41->din0(grp_fu_106_p0);
    mp_mul_add_448ns_fYi_U41->din1(grp_fu_106_p1);
    mp_mul_add_448ns_fYi_U41->ce(ap_var_for_const0);
    mp_mul_add_448ns_fYi_U41->dout(grp_fu_106_p2);
    mp_mul_add_448ns_fYi_U42 = new mp_mul_add_448ns_fYi<1,2,448,448,448>("mp_mul_add_448ns_fYi_U42");
    mp_mul_add_448ns_fYi_U42->clk(ap_clk);
    mp_mul_add_448ns_fYi_U42->reset(ap_rst);
    mp_mul_add_448ns_fYi_U42->din0(grp_fu_106_p2);
    mp_mul_add_448ns_fYi_U42->din1(grp_fu_123_p1);
    mp_mul_add_448ns_fYi_U42->ce(ap_var_for_const0);
    mp_mul_add_448ns_fYi_U42->dout(grp_fu_123_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ah_V_fu_45_p4);
    sensitive << ( a_V );

    SC_METHOD(thread_ahl_V_fu_69_p2);
    sensitive << ( sext_ln68_1_fu_65_p1 );
    sensitive << ( sext_ln68_fu_61_p1 );

    SC_METHOD(thread_al_V_fu_56_p1);
    sensitive << ( a_V );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state2_on_subcall_done);
    sensitive << ( grp_bc1_mult_fu_35_ap_done );
    sensitive << ( grp_bc1_mult1_fu_40_ap_done );
    sensitive << ( grp_bc1_mult_1_fu_30_ap_done );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_return);
    sensitive << ( grp_fu_123_p2 );
    sensitive << ( ap_return_preg );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_bc1_mult1_fu_40_ap_start);
    sensitive << ( grp_bc1_mult1_fu_40_ap_start_reg );

    SC_METHOD(thread_grp_bc1_mult_1_fu_30_ap_start);
    sensitive << ( grp_bc1_mult_1_fu_30_ap_start_reg );

    SC_METHOD(thread_grp_bc1_mult_fu_35_ap_start);
    sensitive << ( grp_bc1_mult_fu_35_ap_start_reg );

    SC_METHOD(thread_grp_fu_106_p0);
    sensitive << ( a0_V_reg_144 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_106_p1);
    sensitive << ( a2_V_reg_150 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_grp_fu_123_p1);
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( r_V_5_fu_112_p3 );

    SC_METHOD(thread_lhs_V_fu_76_p1);
    sensitive << ( a1_V_reg_156 );

    SC_METHOD(thread_r_V_5_fu_112_p3);
    sensitive << ( ret_V_6_reg_171 );

    SC_METHOD(thread_ret_V_6_fu_98_p2);
    sensitive << ( ret_V_reg_161 );
    sensitive << ( sext_ln215_fu_95_p1 );

    SC_METHOD(thread_ret_V_fu_82_p2);
    sensitive << ( lhs_V_fu_76_p1 );
    sensitive << ( rhs_V_fu_79_p1 );

    SC_METHOD(thread_rhs_V_fu_79_p1);
    sensitive << ( a0_V_reg_144 );

    SC_METHOD(thread_sext_ln215_fu_95_p1);
    sensitive << ( a2_V_reg_150 );

    SC_METHOD(thread_sext_ln68_1_fu_65_p1);
    sensitive << ( al_V_fu_56_p1 );

    SC_METHOD(thread_sext_ln68_fu_61_p1);
    sensitive << ( ah_V_fu_45_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_block_state2_on_subcall_done );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000001";
    grp_bc1_mult_1_fu_30_ap_start_reg = SC_LOGIC_0;
    grp_bc1_mult_fu_35_ap_start_reg = SC_LOGIC_0;
    grp_bc1_mult1_fu_40_ap_start_reg = SC_LOGIC_0;
    ap_return_preg = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "koa_mult_h_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, a_V, "(port)a_V");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, ah_V_fu_45_p4, "ah_V_fu_45_p4");
    sc_trace(mVcdFile, ah_V_reg_129, "ah_V_reg_129");
    sc_trace(mVcdFile, al_V_fu_56_p1, "al_V_fu_56_p1");
    sc_trace(mVcdFile, al_V_reg_134, "al_V_reg_134");
    sc_trace(mVcdFile, ahl_V_fu_69_p2, "ahl_V_fu_69_p2");
    sc_trace(mVcdFile, ahl_V_reg_139, "ahl_V_reg_139");
    sc_trace(mVcdFile, grp_bc1_mult_fu_35_ap_return, "grp_bc1_mult_fu_35_ap_return");
    sc_trace(mVcdFile, a0_V_reg_144, "a0_V_reg_144");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_bc1_mult_fu_35_ap_ready, "grp_bc1_mult_fu_35_ap_ready");
    sc_trace(mVcdFile, grp_bc1_mult_fu_35_ap_done, "grp_bc1_mult_fu_35_ap_done");
    sc_trace(mVcdFile, grp_bc1_mult1_fu_40_ap_ready, "grp_bc1_mult1_fu_40_ap_ready");
    sc_trace(mVcdFile, grp_bc1_mult1_fu_40_ap_done, "grp_bc1_mult1_fu_40_ap_done");
    sc_trace(mVcdFile, grp_bc1_mult_1_fu_30_ap_ready, "grp_bc1_mult_1_fu_30_ap_ready");
    sc_trace(mVcdFile, grp_bc1_mult_1_fu_30_ap_done, "grp_bc1_mult_1_fu_30_ap_done");
    sc_trace(mVcdFile, ap_block_state2_on_subcall_done, "ap_block_state2_on_subcall_done");
    sc_trace(mVcdFile, grp_bc1_mult1_fu_40_ap_return, "grp_bc1_mult1_fu_40_ap_return");
    sc_trace(mVcdFile, a2_V_reg_150, "a2_V_reg_150");
    sc_trace(mVcdFile, grp_bc1_mult_1_fu_30_ap_return, "grp_bc1_mult_1_fu_30_ap_return");
    sc_trace(mVcdFile, a1_V_reg_156, "a1_V_reg_156");
    sc_trace(mVcdFile, ret_V_fu_82_p2, "ret_V_fu_82_p2");
    sc_trace(mVcdFile, ret_V_reg_161, "ret_V_reg_161");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, ret_V_6_fu_98_p2, "ret_V_6_fu_98_p2");
    sc_trace(mVcdFile, ret_V_6_reg_171, "ret_V_6_reg_171");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, grp_fu_106_p2, "grp_fu_106_p2");
    sc_trace(mVcdFile, grp_bc1_mult_1_fu_30_ap_start, "grp_bc1_mult_1_fu_30_ap_start");
    sc_trace(mVcdFile, grp_bc1_mult_1_fu_30_ap_idle, "grp_bc1_mult_1_fu_30_ap_idle");
    sc_trace(mVcdFile, grp_bc1_mult_fu_35_ap_start, "grp_bc1_mult_fu_35_ap_start");
    sc_trace(mVcdFile, grp_bc1_mult_fu_35_ap_idle, "grp_bc1_mult_fu_35_ap_idle");
    sc_trace(mVcdFile, grp_bc1_mult1_fu_40_ap_start, "grp_bc1_mult1_fu_40_ap_start");
    sc_trace(mVcdFile, grp_bc1_mult1_fu_40_ap_idle, "grp_bc1_mult1_fu_40_ap_idle");
    sc_trace(mVcdFile, grp_bc1_mult_1_fu_30_ap_start_reg, "grp_bc1_mult_1_fu_30_ap_start_reg");
    sc_trace(mVcdFile, grp_bc1_mult_fu_35_ap_start_reg, "grp_bc1_mult_fu_35_ap_start_reg");
    sc_trace(mVcdFile, grp_bc1_mult1_fu_40_ap_start_reg, "grp_bc1_mult1_fu_40_ap_start_reg");
    sc_trace(mVcdFile, sext_ln68_1_fu_65_p1, "sext_ln68_1_fu_65_p1");
    sc_trace(mVcdFile, sext_ln68_fu_61_p1, "sext_ln68_fu_61_p1");
    sc_trace(mVcdFile, lhs_V_fu_76_p1, "lhs_V_fu_76_p1");
    sc_trace(mVcdFile, rhs_V_fu_79_p1, "rhs_V_fu_79_p1");
    sc_trace(mVcdFile, sext_ln215_fu_95_p1, "sext_ln215_fu_95_p1");
    sc_trace(mVcdFile, grp_fu_106_p0, "grp_fu_106_p0");
    sc_trace(mVcdFile, grp_fu_106_p1, "grp_fu_106_p1");
    sc_trace(mVcdFile, r_V_5_fu_112_p3, "r_V_5_fu_112_p3");
    sc_trace(mVcdFile, grp_fu_123_p1, "grp_fu_123_p1");
    sc_trace(mVcdFile, grp_fu_123_p2, "grp_fu_123_p2");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

koa_mult_h_1::~koa_mult_h_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete grp_bc1_mult_1_fu_30;
    delete grp_bc1_mult_fu_35;
    delete grp_bc1_mult1_fu_40;
    delete mp_mul_add_448ns_fYi_U41;
    delete mp_mul_add_448ns_fYi_U42;
}

void koa_mult_h_1::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void koa_mult_h_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv448_lc_1;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
            ap_return_preg = grp_fu_123_p2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_bc1_mult1_fu_40_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_bc1_mult1_fu_40_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_bc1_mult1_fu_40_ap_ready.read())) {
            grp_bc1_mult1_fu_40_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_bc1_mult_1_fu_30_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_bc1_mult_1_fu_30_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_bc1_mult_1_fu_30_ap_ready.read())) {
            grp_bc1_mult_1_fu_30_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_bc1_mult_fu_35_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            grp_bc1_mult_fu_35_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_bc1_mult_fu_35_ap_ready.read())) {
            grp_bc1_mult_fu_35_ap_start_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0))) {
        a0_V_reg_144 = grp_bc1_mult_fu_35_ap_return.read();
        a1_V_reg_156 = grp_bc1_mult_1_fu_30_ap_return.read();
        a2_V_reg_150 = grp_bc1_mult1_fu_40_ap_return.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        ah_V_reg_129 = a_V.read().range(223, 112);
        ahl_V_reg_139 = ahl_V_fu_69_p2.read();
        al_V_reg_134 = al_V_fu_56_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        ret_V_6_reg_171 = ret_V_6_fu_98_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        ret_V_reg_161 = ret_V_fu_82_p2.read();
    }
}

void koa_mult_h_1::thread_ah_V_fu_45_p4() {
    ah_V_fu_45_p4 = a_V.read().range(223, 112);
}

void koa_mult_h_1::thread_ahl_V_fu_69_p2() {
    ahl_V_fu_69_p2 = (!sext_ln68_1_fu_65_p1.read().is_01() || !sext_ln68_fu_61_p1.read().is_01())? sc_lv<113>(): (sc_bigint<113>(sext_ln68_1_fu_65_p1.read()) + sc_bigint<113>(sext_ln68_fu_61_p1.read()));
}

void koa_mult_h_1::thread_al_V_fu_56_p1() {
    al_V_fu_56_p1 = a_V.read().range(112-1, 0);
}

void koa_mult_h_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void koa_mult_h_1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void koa_mult_h_1::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void koa_mult_h_1::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void koa_mult_h_1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void koa_mult_h_1::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void koa_mult_h_1::thread_ap_block_state2_on_subcall_done() {
    ap_block_state2_on_subcall_done = (esl_seteq<1,1,1>(ap_const_logic_0, grp_bc1_mult_fu_35_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_bc1_mult1_fu_40_ap_done.read()) || esl_seteq<1,1,1>(ap_const_logic_0, grp_bc1_mult_1_fu_30_ap_done.read()));
}

void koa_mult_h_1::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void koa_mult_h_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void koa_mult_h_1::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void koa_mult_h_1::thread_ap_return() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        ap_return = grp_fu_123_p2.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void koa_mult_h_1::thread_grp_bc1_mult1_fu_40_ap_start() {
    grp_bc1_mult1_fu_40_ap_start = grp_bc1_mult1_fu_40_ap_start_reg.read();
}

void koa_mult_h_1::thread_grp_bc1_mult_1_fu_30_ap_start() {
    grp_bc1_mult_1_fu_30_ap_start = grp_bc1_mult_1_fu_30_ap_start_reg.read();
}

void koa_mult_h_1::thread_grp_bc1_mult_fu_35_ap_start() {
    grp_bc1_mult_fu_35_ap_start = grp_bc1_mult_fu_35_ap_start_reg.read();
}

void koa_mult_h_1::thread_grp_fu_106_p0() {
    grp_fu_106_p0 = esl_concat<224,224>(a0_V_reg_144.read(), ap_const_lv224_lc_1);
}

void koa_mult_h_1::thread_grp_fu_106_p1() {
    grp_fu_106_p1 = esl_sext<448,224>(a2_V_reg_150.read());
}

void koa_mult_h_1::thread_grp_fu_123_p1() {
    grp_fu_123_p1 = esl_sext<448,339>(r_V_5_fu_112_p3.read());
}

void koa_mult_h_1::thread_lhs_V_fu_76_p1() {
    lhs_V_fu_76_p1 = esl_sext<227,226>(a1_V_reg_156.read());
}

void koa_mult_h_1::thread_r_V_5_fu_112_p3() {
    r_V_5_fu_112_p3 = esl_concat<227,112>(ret_V_6_reg_171.read(), ap_const_lv112_0);
}

void koa_mult_h_1::thread_ret_V_6_fu_98_p2() {
    ret_V_6_fu_98_p2 = (!ret_V_reg_161.read().is_01() || !sext_ln215_fu_95_p1.read().is_01())? sc_lv<227>(): (sc_biguint<227>(ret_V_reg_161.read()) - sc_bigint<227>(sext_ln215_fu_95_p1.read()));
}

void koa_mult_h_1::thread_ret_V_fu_82_p2() {
    ret_V_fu_82_p2 = (!lhs_V_fu_76_p1.read().is_01() || !rhs_V_fu_79_p1.read().is_01())? sc_lv<227>(): (sc_bigint<227>(lhs_V_fu_76_p1.read()) - sc_bigint<227>(rhs_V_fu_79_p1.read()));
}

void koa_mult_h_1::thread_rhs_V_fu_79_p1() {
    rhs_V_fu_79_p1 = esl_sext<227,224>(a0_V_reg_144.read());
}

void koa_mult_h_1::thread_sext_ln215_fu_95_p1() {
    sext_ln215_fu_95_p1 = esl_sext<227,224>(a2_V_reg_150.read());
}

void koa_mult_h_1::thread_sext_ln68_1_fu_65_p1() {
    sext_ln68_1_fu_65_p1 = esl_sext<113,112>(al_V_fu_56_p1.read());
}

void koa_mult_h_1::thread_sext_ln68_fu_61_p1() {
    sext_ln68_fu_61_p1 = esl_sext<113,112>(ah_V_fu_45_p4.read());
}

void koa_mult_h_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_block_state2_on_subcall_done.read(), ap_const_boolean_0))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXXXX";
            break;
    }
}

}

