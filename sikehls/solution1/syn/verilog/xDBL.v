// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="xDBL,hls_ip_2019_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=1,HLS_INPUT_PART=xc7z020-clg400-1,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=8.374350,HLS_SYN_LAT=1000,HLS_SYN_TPT=none,HLS_SYN_MEM=0,HLS_SYN_DSP=140,HLS_SYN_FF=89979,HLS_SYN_LUT=12606,HLS_VERSION=2019_1}" *)

module xDBL (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        P_X_V_address0,
        P_X_V_ce0,
        P_X_V_q0,
        P_X_V_address1,
        P_X_V_ce1,
        P_X_V_q1,
        P_Z_V_address0,
        P_Z_V_ce0,
        P_Z_V_q0,
        P_Z_V_address1,
        P_Z_V_ce1,
        P_Z_V_q1,
        Q_X_V_address0,
        Q_X_V_ce0,
        Q_X_V_we0,
        Q_X_V_d0,
        Q_Z_V_address0,
        Q_Z_V_ce0,
        Q_Z_V_we0,
        Q_Z_V_d0,
        Q_Z_V_address1,
        Q_Z_V_ce1,
        Q_Z_V_we1,
        Q_Z_V_d1,
        A24plus_V_address0,
        A24plus_V_ce0,
        A24plus_V_q0,
        C24_V_address0,
        C24_V_ce0,
        C24_V_q0
);

parameter    ap_ST_fsm_state1 = 22'd1;
parameter    ap_ST_fsm_state2 = 22'd2;
parameter    ap_ST_fsm_state3 = 22'd4;
parameter    ap_ST_fsm_state4 = 22'd8;
parameter    ap_ST_fsm_state5 = 22'd16;
parameter    ap_ST_fsm_state6 = 22'd32;
parameter    ap_ST_fsm_state7 = 22'd64;
parameter    ap_ST_fsm_state8 = 22'd128;
parameter    ap_ST_fsm_state9 = 22'd256;
parameter    ap_ST_fsm_state10 = 22'd512;
parameter    ap_ST_fsm_state11 = 22'd1024;
parameter    ap_ST_fsm_state12 = 22'd2048;
parameter    ap_ST_fsm_state13 = 22'd4096;
parameter    ap_ST_fsm_state14 = 22'd8192;
parameter    ap_ST_fsm_state15 = 22'd16384;
parameter    ap_ST_fsm_state16 = 22'd32768;
parameter    ap_ST_fsm_state17 = 22'd65536;
parameter    ap_ST_fsm_state18 = 22'd131072;
parameter    ap_ST_fsm_state19 = 22'd262144;
parameter    ap_ST_fsm_state20 = 22'd524288;
parameter    ap_ST_fsm_state21 = 22'd1048576;
parameter    ap_ST_fsm_state22 = 22'd2097152;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [0:0] P_X_V_address0;
output   P_X_V_ce0;
input  [447:0] P_X_V_q0;
output  [0:0] P_X_V_address1;
output   P_X_V_ce1;
input  [447:0] P_X_V_q1;
output  [0:0] P_Z_V_address0;
output   P_Z_V_ce0;
input  [447:0] P_Z_V_q0;
output  [0:0] P_Z_V_address1;
output   P_Z_V_ce1;
input  [447:0] P_Z_V_q1;
output  [0:0] Q_X_V_address0;
output   Q_X_V_ce0;
output   Q_X_V_we0;
output  [447:0] Q_X_V_d0;
output  [0:0] Q_Z_V_address0;
output   Q_Z_V_ce0;
output   Q_Z_V_we0;
output  [447:0] Q_Z_V_d0;
output  [0:0] Q_Z_V_address1;
output   Q_Z_V_ce1;
output   Q_Z_V_we1;
output  [447:0] Q_Z_V_d1;
output  [0:0] A24plus_V_address0;
output   A24plus_V_ce0;
input  [447:0] A24plus_V_q0;
output  [0:0] C24_V_address0;
output   C24_V_ce0;
input  [447:0] C24_V_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg P_X_V_ce0;
reg P_X_V_ce1;
reg P_Z_V_ce0;
reg P_Z_V_ce1;
reg[0:0] Q_X_V_address0;
reg Q_X_V_ce0;
reg Q_X_V_we0;
reg[0:0] Q_Z_V_address0;
reg Q_Z_V_ce0;
reg Q_Z_V_we0;
reg[447:0] Q_Z_V_d0;
reg[0:0] Q_Z_V_address1;
reg Q_Z_V_ce1;
reg Q_Z_V_we1;
reg[447:0] Q_Z_V_d1;
reg[0:0] A24plus_V_address0;
reg A24plus_V_ce0;
reg[0:0] C24_V_address0;
reg C24_V_ce0;

(* fsm_encoding = "none" *) reg   [21:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [834:0] grp_mp_mul_fu_202_ap_return;
reg   [834:0] reg_316;
wire    ap_CS_fsm_state5;
wire    grp_mp_mul_fu_202_ap_ready;
wire    grp_mp_mul_fu_202_ap_done;
wire    grp_rdc_mont_fu_265_ap_ready;
wire    grp_rdc_mont_fu_265_ap_done;
reg    ap_block_state5_on_subcall_done;
wire    ap_CS_fsm_state6;
wire    ap_CS_fsm_state7;
reg    ap_block_state7_on_subcall_done;
wire    ap_CS_fsm_state9;
reg    ap_block_state9_on_subcall_done;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state13;
reg    ap_block_state13_on_subcall_done;
wire    ap_CS_fsm_state17;
wire   [447:0] grp_rdc_mont_fu_265_ap_return;
reg   [447:0] reg_320;
wire    ap_CS_fsm_state14;
reg    ap_block_state14_on_subcall_done;
reg   [447:0] reg_325;
wire    ap_CS_fsm_state12;
reg    ap_block_state12_on_subcall_done;
reg   [447:0] reg_331;
wire    ap_CS_fsm_state2;
wire   [447:0] grp_fu_337_p2;
wire    ap_CS_fsm_state3;
wire   [447:0] grp_fu_343_p2;
wire   [447:0] grp_fu_349_p2;
wire   [447:0] grp_fu_355_p2;
reg   [447:0] add_ln209_1_reg_656;
wire   [447:0] t3_V_1_fu_387_p2;
reg   [447:0] t3_V_1_reg_663;
wire   [447:0] grp_fu_362_p2;
wire    ap_CS_fsm_state4;
wire   [447:0] grp_fu_368_p2;
reg   [447:0] add_ln214_1_reg_674;
wire   [447:0] t3_V_fu_406_p2;
reg   [447:0] t3_V_reg_681;
wire   [447:0] grp_fu_375_p2;
reg   [447:0] t1_V_1_reg_686;
wire   [447:0] grp_fu_381_p2;
wire   [836:0] zext_ln87_3_fu_420_p1;
reg   [836:0] zext_ln87_3_reg_696;
wire   [447:0] grp_fu_394_p2;
reg   [447:0] t1_V_reg_701;
wire   [447:0] grp_fu_400_p2;
wire   [447:0] grp_fu_413_p2;
reg   [447:0] add_ln214_3_reg_711;
wire   [447:0] grp_fu_425_p2;
reg   [447:0] add_ln214_2_reg_716;
wire   [836:0] zext_ln87_1_fu_432_p1;
reg   [836:0] zext_ln87_1_reg_721;
wire   [836:0] zext_ln87_2_fu_437_p1;
reg   [836:0] zext_ln87_2_reg_726;
wire    ap_CS_fsm_state8;
wire   [836:0] zext_ln87_fu_442_p1;
reg   [836:0] zext_ln87_reg_741;
reg   [447:0] call_ret3_reg_746;
reg   [447:0] C24_V_load_1_reg_753;
reg   [447:0] C24_V_load_reg_759;
wire   [447:0] grp_fu_447_p2;
wire    ap_CS_fsm_state10;
wire   [447:0] grp_fu_453_p2;
reg   [447:0] t1_V_2_reg_780;
wire   [447:0] grp_fu_458_p2;
reg   [447:0] t2_V_reg_785;
wire   [447:0] grp_fu_464_p2;
wire   [447:0] grp_fu_469_p2;
reg   [447:0] add_ln214_5_reg_805;
reg   [447:0] A24plus_V_load_1_reg_811;
wire  signed [836:0] sext_ln183_fu_497_p1;
reg  signed [836:0] sext_ln183_reg_817;
wire   [447:0] grp_fu_490_p2;
reg   [447:0] add_ln214_4_reg_822;
reg   [447:0] A24plus_V_load_reg_828;
wire   [447:0] grp_fu_502_p2;
reg   [447:0] t1_V_4_reg_834;
wire  signed [836:0] sext_ln183_2_fu_526_p1;
reg  signed [836:0] sext_ln183_2_reg_849;
wire   [447:0] grp_fu_521_p2;
reg   [447:0] t1_V_3_reg_854;
wire   [0:0] Q_Z_V_addr_reg_869;
wire    ap_CS_fsm_state15;
wire   [0:0] Q_Z_V_addr_1_reg_875;
wire  signed [836:0] sext_ln183_1_fu_551_p1;
reg  signed [836:0] sext_ln183_1_reg_881;
wire   [447:0] grp_fu_545_p2;
reg   [447:0] t2_V_1_reg_886;
wire    ap_CS_fsm_state16;
reg    ap_block_state16_on_subcall_done;
wire   [447:0] grp_fu_556_p2;
reg   [447:0] add_ln209_10_reg_891;
wire   [447:0] grp_fu_563_p2;
reg   [447:0] add_ln209_11_reg_898;
wire   [447:0] grp_fu_569_p2;
reg   [447:0] t2_V_2_reg_905;
wire    ap_CS_fsm_state18;
wire   [447:0] grp_fu_574_p2;
reg   [447:0] t1_V_5_reg_910;
wire   [835:0] grp_fu_586_p2;
reg   [835:0] tt3_V_3_reg_925;
wire    ap_CS_fsm_state19;
wire  signed [836:0] sext_ln183_3_fu_592_p1;
reg  signed [836:0] sext_ln183_3_reg_930;
wire    ap_CS_fsm_state20;
reg    ap_block_state20_on_subcall_done;
wire    grp_mp_mul_fu_202_ap_start;
wire    grp_mp_mul_fu_202_ap_idle;
reg   [447:0] grp_mp_mul_fu_202_a_V;
reg   [447:0] grp_mp_mul_fu_202_b_V;
wire    grp_rdc_mont_fu_265_ap_start;
wire    grp_rdc_mont_fu_265_ap_idle;
reg   [836:0] grp_rdc_mont_fu_265_ma_V;
reg    grp_mp_mul_fu_202_ap_start_reg;
wire    ap_CS_fsm_state21;
reg    grp_rdc_mont_fu_265_ap_start_reg;
reg    ap_block_state21_on_subcall_done;
wire    ap_CS_fsm_state22;
wire   [835:0] grp_fu_484_p0;
wire   [835:0] grp_fu_484_p1;
wire   [835:0] grp_fu_484_p2;
wire   [835:0] grp_fu_515_p0;
wire   [835:0] grp_fu_515_p1;
wire   [835:0] grp_fu_515_p2;
wire   [835:0] grp_fu_539_p0;
wire   [835:0] grp_fu_539_p1;
wire   [835:0] grp_fu_539_p2;
wire   [835:0] grp_fu_586_p0;
wire   [835:0] grp_fu_586_p1;
reg    grp_fu_362_ce;
reg    grp_fu_368_ce;
reg    grp_fu_375_ce;
reg    grp_fu_381_ce;
reg    grp_fu_394_ce;
reg    grp_fu_400_ce;
reg    grp_fu_413_ce;
reg    grp_fu_425_ce;
reg    grp_fu_447_ce;
reg    grp_fu_453_ce;
reg    grp_fu_458_ce;
reg    grp_fu_464_ce;
reg    grp_fu_469_ce;
reg    grp_fu_484_ce;
reg    grp_fu_490_ce;
reg    grp_fu_502_ce;
reg    grp_fu_515_ce;
reg    grp_fu_521_ce;
reg    grp_fu_539_ce;
reg    grp_fu_545_ce;
reg    grp_fu_556_ce;
reg    grp_fu_563_ce;
reg    grp_fu_569_ce;
reg    grp_fu_574_ce;
reg    grp_fu_586_ce;
reg   [21:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 22'd1;
#0 grp_mp_mul_fu_202_ap_start_reg = 1'b0;
#0 grp_rdc_mont_fu_265_ap_start_reg = 1'b0;
end

mp_mul grp_mp_mul_fu_202(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_mp_mul_fu_202_ap_start),
    .ap_done(grp_mp_mul_fu_202_ap_done),
    .ap_idle(grp_mp_mul_fu_202_ap_idle),
    .ap_ready(grp_mp_mul_fu_202_ap_ready),
    .a_V(grp_mp_mul_fu_202_a_V),
    .b_V(grp_mp_mul_fu_202_b_V),
    .ap_return(grp_mp_mul_fu_202_ap_return)
);

rdc_mont grp_rdc_mont_fu_265(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_rdc_mont_fu_265_ap_start),
    .ap_done(grp_rdc_mont_fu_265_ap_done),
    .ap_idle(grp_rdc_mont_fu_265_ap_idle),
    .ap_ready(grp_rdc_mont_fu_265_ap_ready),
    .ma_V(grp_rdc_mont_fu_265_ma_V),
    .ap_return(grp_rdc_mont_fu_265_ap_return)
);

xDBL_sub_448ns_44lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_sub_448ns_44lbW_U47(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(P_X_V_q0),
    .din1(P_Z_V_q0),
    .ce(1'b1),
    .dout(grp_fu_337_p2)
);

xDBL_sub_448ns_44lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_sub_448ns_44lbW_U48(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(P_X_V_q1),
    .din1(P_Z_V_q1),
    .ce(1'b1),
    .dout(grp_fu_343_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U49(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(P_X_V_q0),
    .din1(P_Z_V_q0),
    .ce(1'b1),
    .dout(grp_fu_349_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U50(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(P_X_V_q1),
    .din1(P_Z_V_q1),
    .ce(1'b1),
    .dout(grp_fu_355_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U51(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(448'd48878847322690443103818290022914987238171560487523193022651614672410442478663953451940433343657236891797438053385769878684629467134),
    .din1(grp_fu_337_p2),
    .ce(grp_fu_362_ce),
    .dout(grp_fu_362_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U52(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(448'd48878847322690443103818290022914987238171560487523193022651614672410442478663953451940433343657236891797438053385769878684629467134),
    .din1(grp_fu_343_p2),
    .ce(grp_fu_368_ce),
    .dout(grp_fu_368_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U53(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_349_p2),
    .din1(grp_fu_355_p2),
    .ce(grp_fu_375_ce),
    .dout(grp_fu_375_p2)
);

xDBL_sub_448ns_44lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_sub_448ns_44lbW_U54(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_349_p2),
    .din1(grp_fu_355_p2),
    .ce(grp_fu_381_ce),
    .dout(grp_fu_381_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_362_p2),
    .din1(grp_fu_368_p2),
    .ce(grp_fu_394_ce),
    .dout(grp_fu_394_p2)
);

xDBL_sub_448ns_44lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_sub_448ns_44lbW_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_362_p2),
    .din1(grp_fu_368_p2),
    .ce(grp_fu_400_ce),
    .dout(grp_fu_400_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U57(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(448'd97757694645380886207636580045829974476343120975046386045303229344820884957327906903880866687314473783594876106771539757369258934268),
    .din1(grp_fu_381_p2),
    .ce(grp_fu_413_ce),
    .dout(grp_fu_413_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U58(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(448'd97757694645380886207636580045829974476343120975046386045303229344820884957327906903880866687314473783594876106771539757369258934268),
    .din1(grp_fu_400_p2),
    .ce(grp_fu_425_ce),
    .dout(grp_fu_425_p2)
);

xDBL_sub_448ns_44lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_sub_448ns_44lbW_U59(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_320),
    .din1(reg_325),
    .ce(grp_fu_447_ce),
    .dout(grp_fu_447_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U60(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(C24_V_q0),
    .din1(C24_V_load_1_reg_753),
    .ce(grp_fu_453_ce),
    .dout(grp_fu_453_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U61(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_rdc_mont_fu_265_ap_return),
    .din1(reg_325),
    .ce(grp_fu_458_ce),
    .dout(grp_fu_458_p2)
);

xDBL_sub_448ns_44lbW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_sub_448ns_44lbW_U62(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(call_ret3_reg_746),
    .din1(grp_rdc_mont_fu_265_ap_return),
    .ce(grp_fu_464_ce),
    .dout(grp_fu_464_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U63(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(448'd48878847322690443103818290022914987238171560487523193022651614672410442478663953451940433343657236891797438053385769878684629467134),
    .din1(grp_fu_447_p2),
    .ce(grp_fu_469_ce),
    .dout(grp_fu_469_p2)
);

xDBL_sub_836ns_83ncg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 836 ),
    .din1_WIDTH( 836 ),
    .dout_WIDTH( 836 ))
xDBL_sub_836ns_83ncg_U64(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_484_p0),
    .din1(grp_fu_484_p1),
    .ce(grp_fu_484_ce),
    .dout(grp_fu_484_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U65(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(448'd48878847322690443103818290022914987238171560487523193022651614672410442478663953451940433343657236891797438053385769878684629467134),
    .din1(grp_fu_464_p2),
    .ce(grp_fu_490_ce),
    .dout(grp_fu_490_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U66(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(A24plus_V_q0),
    .din1(A24plus_V_load_1_reg_811),
    .ce(grp_fu_502_ce),
    .dout(grp_fu_502_p2)
);

xDBL_sub_836ns_83ncg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 836 ),
    .din1_WIDTH( 836 ),
    .dout_WIDTH( 836 ))
xDBL_sub_836ns_83ncg_U67(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_515_p0),
    .din1(grp_fu_515_p1),
    .ce(grp_fu_515_ce),
    .dout(grp_fu_515_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U68(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(call_ret3_reg_746),
    .din1(reg_320),
    .ce(grp_fu_521_ce),
    .dout(grp_fu_521_p2)
);

xDBL_sub_836ns_83ncg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 836 ),
    .din1_WIDTH( 836 ),
    .dout_WIDTH( 836 ))
xDBL_sub_836ns_83ncg_U69(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_539_p0),
    .din1(grp_fu_539_p1),
    .ce(grp_fu_539_ce),
    .dout(grp_fu_539_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U70(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_331),
    .din1(reg_325),
    .ce(grp_fu_545_ce),
    .dout(grp_fu_545_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U71(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_331),
    .din1(reg_320),
    .ce(grp_fu_556_ce),
    .dout(grp_fu_556_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U72(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(reg_325),
    .din1(reg_320),
    .ce(grp_fu_563_ce),
    .dout(grp_fu_563_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U73(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln214_4_reg_822),
    .din1(add_ln214_5_reg_805),
    .ce(grp_fu_569_ce),
    .dout(grp_fu_569_p2)
);

xDBL_add_448ns_44mb6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 448 ),
    .din1_WIDTH( 448 ),
    .dout_WIDTH( 448 ))
xDBL_add_448ns_44mb6_U74(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(add_ln209_10_reg_891),
    .din1(add_ln209_11_reg_898),
    .ce(grp_fu_574_ce),
    .dout(grp_fu_574_p2)
);

xDBL_sub_836ns_83ncg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 836 ),
    .din1_WIDTH( 836 ),
    .dout_WIDTH( 836 ))
xDBL_sub_836ns_83ncg_U75(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_586_p0),
    .din1(grp_fu_586_p1),
    .ce(grp_fu_586_ce),
    .dout(grp_fu_586_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_mp_mul_fu_202_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done)) | ((1'b0 == ap_block_state20_on_subcall_done) & (1'b1 == ap_CS_fsm_state20)) | ((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16)) | ((1'b1 == ap_CS_fsm_state8) & (grp_rdc_mont_fu_265_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state12) & (1'b0 == ap_block_state12_on_subcall_done)) | ((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_on_subcall_done)) | ((1'b1 == ap_CS_fsm_state9) & (1'b0 == ap_block_state9_on_subcall_done)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
            grp_mp_mul_fu_202_ap_start_reg <= 1'b1;
        end else if ((grp_mp_mul_fu_202_ap_ready == 1'b1)) begin
            grp_mp_mul_fu_202_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_rdc_mont_fu_265_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state15) | ((1'b0 == ap_block_state21_on_subcall_done) & (1'b1 == ap_CS_fsm_state21)) | ((1'b0 == ap_block_state20_on_subcall_done) & (1'b1 == ap_CS_fsm_state20)) | ((1'b1 == ap_CS_fsm_state8) & (grp_rdc_mont_fu_265_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state12) & (1'b0 == ap_block_state12_on_subcall_done)) | ((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_on_subcall_done)) | ((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7_on_subcall_done)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
            grp_rdc_mont_fu_265_ap_start_reg <= 1'b1;
        end else if ((grp_rdc_mont_fu_265_ap_ready == 1'b1)) begin
            grp_rdc_mont_fu_265_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
        A24plus_V_load_1_reg_811 <= A24plus_V_q0;
        add_ln214_5_reg_805 <= grp_fu_469_p2;
        t1_V_2_reg_780 <= grp_fu_453_p2;
        t2_V_reg_785 <= grp_fu_458_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
        A24plus_V_load_reg_828 <= A24plus_V_q0;
        add_ln214_4_reg_822 <= grp_fu_490_p2;
        sext_ln183_reg_817 <= sext_ln183_fu_497_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (grp_rdc_mont_fu_265_ap_done == 1'b1))) begin
        C24_V_load_1_reg_753 <= C24_V_q0;
        call_ret3_reg_746 <= grp_rdc_mont_fu_265_ap_return;
        zext_ln87_reg_741[834 : 0] <= zext_ln87_fu_442_p1[834 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == ap_block_state9_on_subcall_done))) begin
        C24_V_load_reg_759 <= C24_V_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16))) begin
        add_ln209_10_reg_891 <= grp_fu_556_p2;
        add_ln209_11_reg_898 <= grp_fu_563_p2;
        t2_V_1_reg_886 <= grp_fu_545_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln209_1_reg_656 <= grp_fu_355_p2;
        t3_V_1_reg_663[447 : 1] <= t3_V_1_fu_387_p2[447 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        add_ln214_1_reg_674 <= grp_fu_368_p2;
        t1_V_1_reg_686 <= grp_fu_375_p2;
        t3_V_reg_681[447 : 1] <= t3_V_fu_406_p2[447 : 1];
        zext_ln87_3_reg_696[834 : 0] <= zext_ln87_3_fu_420_p1[834 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
        add_ln214_2_reg_716 <= grp_fu_425_p2;
        zext_ln87_1_reg_721[834 : 0] <= zext_ln87_1_fu_432_p1[834 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done))) begin
        add_ln214_3_reg_711 <= grp_fu_413_p2;
        t1_V_reg_701 <= grp_fu_394_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done)) | ((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_on_subcall_done)) | ((1'b1 == ap_CS_fsm_state9) & (1'b0 == ap_block_state9_on_subcall_done)) | ((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7_on_subcall_done)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        reg_316 <= grp_mp_mul_fu_202_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done)) | ((1'b1 == ap_CS_fsm_state14) & (1'b0 == ap_block_state14_on_subcall_done)))) begin
        reg_320 <= grp_rdc_mont_fu_265_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (1'b0 == ap_block_state12_on_subcall_done)) | ((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7_on_subcall_done)))) begin
        reg_325 <= grp_rdc_mont_fu_265_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_on_subcall_done)) | ((1'b1 == ap_CS_fsm_state9) & (1'b0 == ap_block_state9_on_subcall_done)))) begin
        reg_331 <= grp_rdc_mont_fu_265_ap_return;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        sext_ln183_1_reg_881 <= sext_ln183_1_fu_551_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_on_subcall_done))) begin
        sext_ln183_2_reg_849 <= sext_ln183_2_fu_526_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state20_on_subcall_done) & (1'b1 == ap_CS_fsm_state20))) begin
        sext_ln183_3_reg_930 <= sext_ln183_3_fu_592_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state14) & (1'b0 == ap_block_state14_on_subcall_done))) begin
        t1_V_3_reg_854 <= grp_fu_521_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state12) & (1'b0 == ap_block_state12_on_subcall_done))) begin
        t1_V_4_reg_834 <= grp_fu_502_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        t1_V_5_reg_910 <= grp_fu_574_p2;
        t2_V_2_reg_905 <= grp_fu_569_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
        tt3_V_3_reg_925 <= grp_fu_586_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7_on_subcall_done))) begin
        zext_ln87_2_reg_726[834 : 0] <= zext_ln87_2_fu_437_p1[834 : 0];
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        A24plus_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        A24plus_V_address0 = 64'd1;
    end else begin
        A24plus_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state9) & (1'b0 == ap_block_state9_on_subcall_done)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        A24plus_V_ce0 = 1'b1;
    end else begin
        A24plus_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        C24_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        C24_V_address0 = 64'd1;
    end else begin
        C24_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state8) & (grp_rdc_mont_fu_265_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7_on_subcall_done)))) begin
        C24_V_ce0 = 1'b1;
    end else begin
        C24_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        P_X_V_ce0 = 1'b1;
    end else begin
        P_X_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        P_X_V_ce1 = 1'b1;
    end else begin
        P_X_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        P_Z_V_ce0 = 1'b1;
    end else begin
        P_Z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        P_Z_V_ce1 = 1'b1;
    end else begin
        P_Z_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        Q_X_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        Q_X_V_address0 = 64'd1;
    end else begin
        Q_X_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state20_on_subcall_done) & (1'b1 == ap_CS_fsm_state20)) | ((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16)))) begin
        Q_X_V_ce0 = 1'b1;
    end else begin
        Q_X_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_state20_on_subcall_done) & (1'b1 == ap_CS_fsm_state20)) | ((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16)))) begin
        Q_X_V_we0 = 1'b1;
    end else begin
        Q_X_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        Q_Z_V_address0 = Q_Z_V_addr_1_reg_875;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Q_Z_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        Q_Z_V_address0 = 64'd1;
    end else begin
        Q_Z_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        Q_Z_V_address1 = Q_Z_V_addr_reg_869;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Q_Z_V_address1 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        Q_Z_V_address1 = 64'd0;
    end else begin
        Q_Z_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b0 == ap_block_state21_on_subcall_done) & (1'b1 == ap_CS_fsm_state21)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17)))) begin
        Q_Z_V_ce0 = 1'b1;
    end else begin
        Q_Z_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state22) & (grp_rdc_mont_fu_265_ap_done == 1'b1)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17)))) begin
        Q_Z_V_ce1 = 1'b1;
    end else begin
        Q_Z_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        Q_Z_V_d0 = grp_rdc_mont_fu_265_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Q_Z_V_d0 = add_ln209_10_reg_891;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        Q_Z_V_d0 = reg_325;
    end else begin
        Q_Z_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state22)) begin
        Q_Z_V_d1 = grp_rdc_mont_fu_265_ap_return;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        Q_Z_V_d1 = add_ln209_11_reg_898;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        Q_Z_V_d1 = reg_331;
    end else begin
        Q_Z_V_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b0 == ap_block_state21_on_subcall_done) & (1'b1 == ap_CS_fsm_state21)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17)))) begin
        Q_Z_V_we0 = 1'b1;
    end else begin
        Q_Z_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state22) & (grp_rdc_mont_fu_265_ap_done == 1'b1)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17)))) begin
        Q_Z_V_we1 = 1'b1;
    end else begin
        Q_Z_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) & (grp_rdc_mont_fu_265_ap_done == 1'b1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) & (grp_rdc_mont_fu_265_ap_done == 1'b1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        grp_fu_362_ce = 1'b1;
    end else begin
        grp_fu_362_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        grp_fu_368_ce = 1'b1;
    end else begin
        grp_fu_368_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        grp_fu_375_ce = 1'b1;
    end else begin
        grp_fu_375_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        grp_fu_381_ce = 1'b1;
    end else begin
        grp_fu_381_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        grp_fu_394_ce = 1'b1;
    end else begin
        grp_fu_394_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        grp_fu_400_ce = 1'b1;
    end else begin
        grp_fu_400_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4)))) begin
        grp_fu_413_ce = 1'b1;
    end else begin
        grp_fu_413_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6)))) begin
        grp_fu_425_ce = 1'b1;
    end else begin
        grp_fu_425_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state8) & (grp_rdc_mont_fu_265_ap_done == 1'b1)) | ((1'b1 == ap_CS_fsm_state9) & (1'b0 == ap_block_state9_on_subcall_done)))) begin
        grp_fu_447_ce = 1'b1;
    end else begin
        grp_fu_447_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state9) & (1'b0 == ap_block_state9_on_subcall_done)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_453_ce = 1'b1;
    end else begin
        grp_fu_453_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state9) & (1'b0 == ap_block_state9_on_subcall_done)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_458_ce = 1'b1;
    end else begin
        grp_fu_458_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state9) & (1'b0 == ap_block_state9_on_subcall_done)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_464_ce = 1'b1;
    end else begin
        grp_fu_464_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state9) & (1'b0 == ap_block_state9_on_subcall_done)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10)))) begin
        grp_fu_469_ce = 1'b1;
    end else begin
        grp_fu_469_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11)))) begin
        grp_fu_484_ce = 1'b1;
    end else begin
        grp_fu_484_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11)))) begin
        grp_fu_490_ce = 1'b1;
    end else begin
        grp_fu_490_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (1'b0 == ap_block_state12_on_subcall_done)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11)))) begin
        grp_fu_502_ce = 1'b1;
    end else begin
        grp_fu_502_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state12) & (1'b0 == ap_block_state12_on_subcall_done)) | ((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_on_subcall_done)))) begin
        grp_fu_515_ce = 1'b1;
    end else begin
        grp_fu_515_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state14) & (1'b0 == ap_block_state14_on_subcall_done)) | ((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_on_subcall_done)))) begin
        grp_fu_521_ce = 1'b1;
    end else begin
        grp_fu_521_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b1 == ap_CS_fsm_state14) & (1'b0 == ap_block_state14_on_subcall_done)))) begin
        grp_fu_539_ce = 1'b1;
    end else begin
        grp_fu_539_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16)))) begin
        grp_fu_545_ce = 1'b1;
    end else begin
        grp_fu_545_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16)))) begin
        grp_fu_556_ce = 1'b1;
    end else begin
        grp_fu_556_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) | ((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16)))) begin
        grp_fu_563_ce = 1'b1;
    end else begin
        grp_fu_563_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17)))) begin
        grp_fu_569_ce = 1'b1;
    end else begin
        grp_fu_569_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17)))) begin
        grp_fu_574_ce = 1'b1;
    end else begin
        grp_fu_574_ce = 1'b0;
    end
end

always @ (*) begin
    if ((((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19)) | ((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18)))) begin
        grp_fu_586_ce = 1'b1;
    end else begin
        grp_fu_586_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state21)) begin
        grp_mp_mul_fu_202_a_V = t1_V_5_reg_910;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_mp_mul_fu_202_a_V = t1_V_3_reg_854;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        grp_mp_mul_fu_202_a_V = t1_V_4_reg_834;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        grp_mp_mul_fu_202_a_V = add_ln209_11_reg_898;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        grp_mp_mul_fu_202_a_V = add_ln209_10_reg_891;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_mp_mul_fu_202_a_V = t1_V_2_reg_780;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_mp_mul_fu_202_a_V = call_ret3_reg_746;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_mp_mul_fu_202_a_V = reg_320;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        grp_mp_mul_fu_202_a_V = A24plus_V_load_reg_828;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        grp_mp_mul_fu_202_a_V = A24plus_V_load_1_reg_811;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        grp_mp_mul_fu_202_a_V = C24_V_load_reg_759;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_mp_mul_fu_202_a_V = C24_V_load_1_reg_753;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_mp_mul_fu_202_a_V = t1_V_reg_701;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_mp_mul_fu_202_a_V = t1_V_1_reg_686;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_mp_mul_fu_202_a_V = t3_V_reg_681;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_mp_mul_fu_202_a_V = t3_V_1_reg_663;
    end else begin
        grp_mp_mul_fu_202_a_V = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        grp_mp_mul_fu_202_b_V = t2_V_1_reg_886;
    end else if (((1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state19))) begin
        grp_mp_mul_fu_202_b_V = t2_V_2_reg_905;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        grp_mp_mul_fu_202_b_V = t2_V_reg_785;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_mp_mul_fu_202_b_V = add_ln214_4_reg_822;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state11))) begin
        grp_mp_mul_fu_202_b_V = add_ln214_5_reg_805;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state14))) begin
        grp_mp_mul_fu_202_b_V = reg_331;
    end else if (((1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_mp_mul_fu_202_b_V = reg_325;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_mp_mul_fu_202_b_V = add_ln214_2_reg_716;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_mp_mul_fu_202_b_V = add_ln214_3_reg_711;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_mp_mul_fu_202_b_V = add_ln214_1_reg_674;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        grp_mp_mul_fu_202_b_V = add_ln209_1_reg_656;
    end else begin
        grp_mp_mul_fu_202_b_V = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21))) begin
        grp_rdc_mont_fu_265_ma_V = sext_ln183_3_reg_930;
    end else if (((1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state16))) begin
        grp_rdc_mont_fu_265_ma_V = sext_ln183_1_reg_881;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        grp_rdc_mont_fu_265_ma_V = sext_ln183_2_reg_849;
    end else if (((1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_rdc_mont_fu_265_ma_V = sext_ln183_reg_817;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        grp_rdc_mont_fu_265_ma_V = zext_ln87_reg_741;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_rdc_mont_fu_265_ma_V = zext_ln87_2_reg_726;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_rdc_mont_fu_265_ma_V = zext_ln87_1_reg_721;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_rdc_mont_fu_265_ma_V = zext_ln87_3_reg_696;
    end else begin
        grp_rdc_mont_fu_265_ma_V = 'bx;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b1 == ap_CS_fsm_state5) & (1'b0 == ap_block_state5_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state7 : begin
            if (((1'b1 == ap_CS_fsm_state7) & (1'b0 == ap_block_state7_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (grp_rdc_mont_fu_265_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (1'b0 == ap_block_state9_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            if (((1'b1 == ap_CS_fsm_state12) & (1'b0 == ap_block_state12_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            if (((1'b1 == ap_CS_fsm_state13) & (1'b0 == ap_block_state13_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((1'b1 == ap_CS_fsm_state14) & (1'b0 == ap_block_state14_on_subcall_done))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b0 == ap_block_state16_on_subcall_done) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            if (((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state17))) begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        ap_ST_fsm_state18 : begin
            if (((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            if (((grp_mp_mul_fu_202_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state19))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end
        end
        ap_ST_fsm_state20 : begin
            if (((1'b0 == ap_block_state20_on_subcall_done) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if (((1'b0 == ap_block_state21_on_subcall_done) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        ap_ST_fsm_state22 : begin
            if (((1'b1 == ap_CS_fsm_state22) & (grp_rdc_mont_fu_265_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state22;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign P_X_V_address0 = 64'd0;

assign P_X_V_address1 = 64'd1;

assign P_Z_V_address0 = 64'd0;

assign P_Z_V_address1 = 64'd1;

assign Q_X_V_d0 = grp_rdc_mont_fu_265_ap_return;

assign Q_Z_V_addr_1_reg_875 = 64'd1;

assign Q_Z_V_addr_reg_869 = 64'd0;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state12_on_subcall_done = ((grp_mp_mul_fu_202_ap_done == 1'b0) | (grp_rdc_mont_fu_265_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state13_on_subcall_done = ((grp_mp_mul_fu_202_ap_done == 1'b0) | (grp_rdc_mont_fu_265_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state14_on_subcall_done = ((grp_mp_mul_fu_202_ap_done == 1'b0) | (grp_rdc_mont_fu_265_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state16_on_subcall_done = ((grp_mp_mul_fu_202_ap_done == 1'b0) | (grp_rdc_mont_fu_265_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state20_on_subcall_done = ((grp_mp_mul_fu_202_ap_done == 1'b0) | (grp_rdc_mont_fu_265_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state21_on_subcall_done = ((grp_mp_mul_fu_202_ap_done == 1'b0) | (grp_rdc_mont_fu_265_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state5_on_subcall_done = ((grp_mp_mul_fu_202_ap_done == 1'b0) | (grp_rdc_mont_fu_265_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state7_on_subcall_done = ((grp_mp_mul_fu_202_ap_done == 1'b0) | (grp_rdc_mont_fu_265_ap_done == 1'b0));
end

always @ (*) begin
    ap_block_state9_on_subcall_done = ((grp_mp_mul_fu_202_ap_done == 1'b0) | (grp_rdc_mont_fu_265_ap_done == 1'b0));
end

assign grp_fu_484_p0 = grp_mp_mul_fu_202_ap_return;

assign grp_fu_484_p1 = reg_316;

assign grp_fu_515_p0 = grp_mp_mul_fu_202_ap_return;

assign grp_fu_515_p1 = reg_316;

assign grp_fu_539_p0 = grp_mp_mul_fu_202_ap_return;

assign grp_fu_539_p1 = reg_316;

assign grp_fu_586_p0 = reg_316;

assign grp_fu_586_p1 = grp_mp_mul_fu_202_ap_return;

assign grp_mp_mul_fu_202_ap_start = grp_mp_mul_fu_202_ap_start_reg;

assign grp_rdc_mont_fu_265_ap_start = grp_rdc_mont_fu_265_ap_start_reg;

assign sext_ln183_1_fu_551_p1 = $signed(grp_fu_539_p2);

assign sext_ln183_2_fu_526_p1 = $signed(grp_fu_515_p2);

assign sext_ln183_3_fu_592_p1 = $signed(tt3_V_3_reg_925);

assign sext_ln183_fu_497_p1 = $signed(grp_fu_484_p2);

assign t3_V_1_fu_387_p2 = grp_fu_349_p2 << 448'd1;

assign t3_V_fu_406_p2 = grp_fu_362_p2 << 448'd1;

assign zext_ln87_1_fu_432_p1 = reg_316;

assign zext_ln87_2_fu_437_p1 = reg_316;

assign zext_ln87_3_fu_420_p1 = grp_mp_mul_fu_202_ap_return;

assign zext_ln87_fu_442_p1 = reg_316;

always @ (posedge ap_clk) begin
    t3_V_1_reg_663[0] <= 1'b0;
    t3_V_reg_681[0] <= 1'b0;
    zext_ln87_3_reg_696[836:835] <= 2'b00;
    zext_ln87_1_reg_721[836:835] <= 2'b00;
    zext_ln87_2_reg_726[836:835] <= 2'b00;
    zext_ln87_reg_741[836:835] <= 2'b00;
end

endmodule //xDBL
