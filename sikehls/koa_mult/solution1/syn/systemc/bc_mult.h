// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _bc_mult_HH_
#define _bc_mult_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "koa_mult_h1_mux_4bkb.h"
#include "koa_mult_h1_mul_6cud.h"
#include "koa_mult_h1_mux_4dEe.h"
#include "koa_mult_h1_add_3eOg.h"
#include "koa_mult_h1_add_3fYi.h"
#include "koa_mult_h1_add_4g8j.h"
#include "koa_mult_h1_add_3hbi.h"

namespace ap_rtl {

struct bc_mult : public sc_module {
    // Port declarations 8
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<224> > ta_V;
    sc_out< sc_lv<448> > ap_return;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    bc_mult(sc_module_name name);
    SC_HAS_PROCESS(bc_mult);

    ~bc_mult();

    sc_trace_file* mVcdFile;

    koa_mult_h1_mux_4bkb<1,1,64,64,64,64,2,64>* koa_mult_h1_mux_4bkb_U1;
    koa_mult_h1_mul_6cud<1,5,64,64,128>* koa_mult_h1_mul_6cud_U2;
    koa_mult_h1_mul_6cud<1,5,64,64,128>* koa_mult_h1_mul_6cud_U3;
    koa_mult_h1_mul_6cud<1,5,64,64,128>* koa_mult_h1_mul_6cud_U4;
    koa_mult_h1_mul_6cud<1,5,64,64,128>* koa_mult_h1_mul_6cud_U5;
    koa_mult_h1_mux_4dEe<1,1,321,321,321,321,2,321>* koa_mult_h1_mux_4dEe_U6;
    koa_mult_h1_add_3eOg<1,2,323,323,323>* koa_mult_h1_add_3eOg_U7;
    koa_mult_h1_mux_4dEe<1,1,321,321,321,321,2,321>* koa_mult_h1_mux_4dEe_U8;
    koa_mult_h1_add_3fYi<1,2,387,387,387>* koa_mult_h1_add_3fYi_U9;
    koa_mult_h1_mux_4dEe<1,1,321,321,321,321,2,321>* koa_mult_h1_mux_4dEe_U10;
    koa_mult_h1_add_4g8j<1,2,448,448,448>* koa_mult_h1_add_4g8j_U11;
    koa_mult_h1_mux_4dEe<1,1,321,321,321,321,2,321>* koa_mult_h1_mux_4dEe_U12;
    koa_mult_h1_add_4g8j<1,2,448,448,448>* koa_mult_h1_add_4g8j_U13;
    koa_mult_h1_add_3hbi<1,2,388,388,388>* koa_mult_h1_add_3hbi_U14;
    koa_mult_h1_add_4g8j<1,2,448,448,448>* koa_mult_h1_add_4g8j_U15;
    koa_mult_h1_add_4g8j<1,2,448,448,448>* koa_mult_h1_add_4g8j_U16;
    sc_signal< sc_lv<7> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<3> > i7_0_reg_154;
    sc_signal< sc_lv<64> > ai_0_V_fu_224_p1;
    sc_signal< sc_lv<64> > ai_0_V_reg_757;
    sc_signal< sc_lv<64> > ai_1_V_fu_228_p4;
    sc_signal< sc_lv<64> > ai_1_V_reg_762;
    sc_signal< sc_lv<64> > ai_2_V_fu_238_p4;
    sc_signal< sc_lv<64> > ai_2_V_reg_767;
    sc_signal< sc_lv<64> > ai_3_V_fu_258_p1;
    sc_signal< sc_lv<64> > ai_3_V_reg_772;
    sc_signal< sc_lv<128> > zext_ln215_fu_262_p1;
    sc_signal< sc_lv<128> > zext_ln215_reg_777;
    sc_signal< sc_lv<128> > zext_ln215_10_fu_266_p1;
    sc_signal< sc_lv<128> > zext_ln215_10_reg_782;
    sc_signal< sc_lv<128> > zext_ln215_11_fu_270_p1;
    sc_signal< sc_lv<128> > zext_ln215_11_reg_787;
    sc_signal< sc_lv<128> > zext_ln215_12_fu_274_p1;
    sc_signal< sc_lv<128> > zext_ln215_12_reg_792;
    sc_signal< sc_lv<1> > icmp_ln202_fu_278_p2;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state2_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter1;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter2;
    sc_signal< bool > ap_block_state5_pp0_stage0_iter3;
    sc_signal< bool > ap_block_state6_pp0_stage0_iter4;
    sc_signal< bool > ap_block_state7_pp0_stage0_iter5;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<3> > i_3_fu_284_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<2> > trunc_ln215_fu_290_p1;
    sc_signal< sc_lv<2> > trunc_ln215_reg_806;
    sc_signal< sc_lv<2> > trunc_ln215_reg_806_pp0_iter1_reg;
    sc_signal< sc_lv<2> > trunc_ln215_reg_806_pp0_iter2_reg;
    sc_signal< sc_lv<2> > trunc_ln215_reg_806_pp0_iter3_reg;
    sc_signal< sc_lv<2> > trunc_ln215_reg_806_pp0_iter4_reg;
    sc_signal< sc_lv<64> > tmp_3_fu_294_p6;
    sc_signal< sc_lv<64> > tmp_3_reg_810;
    sc_signal< sc_lv<128> > zext_ln215_9_fu_304_p1;
    sc_signal< sc_lv<3> > i_fu_453_p2;
    sc_signal< sc_lv<3> > i_reg_826;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<1> > icmp_ln213_fu_447_p2;
    sc_signal< sc_lv<323> > grp_fu_529_p2;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_lv<387> > grp_fu_561_p2;
    sc_signal< sc_lv<448> > grp_fu_593_p2;
    sc_signal< sc_lv<448> > grp_fu_625_p2;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<448> > grp_fu_645_p2;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter4;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter5;
    sc_signal< sc_lv<323> > sum_V_0_0_reg_165;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<387> > sum_V_1_0_reg_177;
    sc_signal< sc_lv<448> > sum_V_2_0_reg_189;
    sc_signal< sc_lv<448> > sum_V_3_0_reg_201;
    sc_signal< sc_lv<3> > i8_0_reg_213;
    sc_signal< sc_lv<321> > partial_products_3_25_fu_84;
    sc_signal< sc_lv<321> > partial_products_0_19_fu_327_p1;
    sc_signal< sc_lv<321> > partial_products_0_24_fu_88;
    sc_signal< sc_lv<321> > zext_ln1503_fu_339_p1;
    sc_signal< sc_lv<321> > partial_products_0_23_fu_92;
    sc_signal< sc_lv<321> > zext_ln1503_8_fu_351_p1;
    sc_signal< sc_lv<321> > partial_products_0_s_fu_96;
    sc_signal< sc_lv<321> > zext_ln1503_9_fu_363_p1;
    sc_signal< sc_lv<321> > partial_products_3_26_fu_100;
    sc_signal< sc_lv<321> > partial_products_1_16_fu_104;
    sc_signal< sc_lv<321> > partial_products_1_15_fu_108;
    sc_signal< sc_lv<321> > partial_products_1_s_fu_112;
    sc_signal< sc_lv<321> > partial_products_3_27_fu_116;
    sc_signal< sc_lv<321> > partial_products_2_16_fu_120;
    sc_signal< sc_lv<321> > partial_products_2_15_fu_124;
    sc_signal< sc_lv<321> > partial_products_2_s_fu_128;
    sc_signal< sc_lv<321> > partial_products_3_28_fu_132;
    sc_signal< sc_lv<321> > partial_products_3_16_fu_136;
    sc_signal< sc_lv<321> > partial_products_3_15_fu_140;
    sc_signal< sc_lv<321> > partial_products_3_s_fu_144;
    sc_signal< sc_lv<32> > tmp_fu_248_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<2> > tmp_3_fu_294_p5;
    sc_signal< sc_lv<64> > grp_fu_307_p0;
    sc_signal< sc_lv<64> > grp_fu_307_p1;
    sc_signal< sc_lv<64> > grp_fu_312_p0;
    sc_signal< sc_lv<64> > grp_fu_312_p1;
    sc_signal< sc_lv<64> > grp_fu_317_p0;
    sc_signal< sc_lv<64> > grp_fu_317_p1;
    sc_signal< sc_lv<64> > grp_fu_322_p0;
    sc_signal< sc_lv<64> > grp_fu_322_p1;
    sc_signal< sc_lv<128> > grp_fu_307_p2;
    sc_signal< sc_lv<128> > grp_fu_312_p2;
    sc_signal< sc_lv<192> > partial_products_0_20_fu_331_p3;
    sc_signal< sc_lv<128> > grp_fu_317_p2;
    sc_signal< sc_lv<256> > partial_products_0_21_fu_343_p3;
    sc_signal< sc_lv<128> > grp_fu_322_p2;
    sc_signal< sc_lv<320> > partial_products_0_22_fu_355_p3;
    sc_signal< sc_lv<2> > trunc_ln209_fu_507_p1;
    sc_signal< sc_lv<321> > tmp_4_fu_511_p6;
    sc_signal< sc_lv<323> > grp_fu_529_p0;
    sc_signal< sc_lv<321> > tmp_5_fu_535_p6;
    sc_signal< sc_lv<385> > shl_ln_fu_549_p3;
    sc_signal< sc_lv<387> > grp_fu_561_p0;
    sc_signal< sc_lv<321> > tmp_6_fu_567_p6;
    sc_signal< sc_lv<320> > trunc_ln1503_fu_581_p1;
    sc_signal< sc_lv<448> > grp_fu_593_p0;
    sc_signal< sc_lv<321> > tmp_7_fu_599_p6;
    sc_signal< sc_lv<256> > trunc_ln1503_2_fu_613_p1;
    sc_signal< sc_lv<448> > grp_fu_625_p0;
    sc_signal< sc_lv<388> > grp_fu_639_p0;
    sc_signal< sc_lv<388> > grp_fu_639_p1;
    sc_signal< sc_lv<388> > grp_fu_639_p2;
    sc_signal< sc_lv<448> > grp_fu_655_p1;
    sc_signal< sc_lv<448> > grp_fu_655_p2;
    sc_signal< sc_lv<448> > ap_return_preg;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< sc_lv<7> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<7> ap_ST_fsm_state1;
    static const sc_lv<7> ap_ST_fsm_pp0_stage0;
    static const sc_lv<7> ap_ST_fsm_state8;
    static const sc_lv<7> ap_ST_fsm_state9;
    static const sc_lv<7> ap_ST_fsm_state10;
    static const sc_lv<7> ap_ST_fsm_state11;
    static const sc_lv<7> ap_ST_fsm_state12;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<3> ap_const_lv3_0;
    static const sc_lv<323> ap_const_lv323_lc_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<387> ap_const_lv387_lc_1;
    static const sc_lv<448> ap_const_lv448_lc_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<2> ap_const_lv2_2;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<32> ap_const_lv32_40;
    static const sc_lv<32> ap_const_lv32_7F;
    static const sc_lv<32> ap_const_lv32_80;
    static const sc_lv<32> ap_const_lv32_BF;
    static const sc_lv<32> ap_const_lv32_C0;
    static const sc_lv<32> ap_const_lv32_DF;
    static const sc_lv<3> ap_const_lv3_4;
    static const sc_lv<3> ap_const_lv3_1;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<128> ap_const_lv128_lc_1;
    static const sc_lv<192> ap_const_lv192_lc_1;
    static const sc_lv<32> ap_const_lv32_6;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ai_0_V_fu_224_p1();
    void thread_ai_1_V_fu_228_p4();
    void thread_ai_2_V_fu_238_p4();
    void thread_ai_3_V_fu_258_p1();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_state2_pp0_stage0_iter0();
    void thread_ap_block_state3_pp0_stage0_iter1();
    void thread_ap_block_state4_pp0_stage0_iter2();
    void thread_ap_block_state5_pp0_stage0_iter3();
    void thread_ap_block_state6_pp0_stage0_iter4();
    void thread_ap_block_state7_pp0_stage0_iter5();
    void thread_ap_condition_pp0_exit_iter0_state2();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_grp_fu_307_p0();
    void thread_grp_fu_307_p1();
    void thread_grp_fu_312_p0();
    void thread_grp_fu_312_p1();
    void thread_grp_fu_317_p0();
    void thread_grp_fu_317_p1();
    void thread_grp_fu_322_p0();
    void thread_grp_fu_322_p1();
    void thread_grp_fu_529_p0();
    void thread_grp_fu_561_p0();
    void thread_grp_fu_593_p0();
    void thread_grp_fu_625_p0();
    void thread_grp_fu_639_p0();
    void thread_grp_fu_639_p1();
    void thread_grp_fu_655_p1();
    void thread_i_3_fu_284_p2();
    void thread_i_fu_453_p2();
    void thread_icmp_ln202_fu_278_p2();
    void thread_icmp_ln213_fu_447_p2();
    void thread_partial_products_0_19_fu_327_p1();
    void thread_partial_products_0_20_fu_331_p3();
    void thread_partial_products_0_21_fu_343_p3();
    void thread_partial_products_0_22_fu_355_p3();
    void thread_shl_ln_fu_549_p3();
    void thread_tmp_3_fu_294_p5();
    void thread_tmp_fu_248_p4();
    void thread_trunc_ln1503_2_fu_613_p1();
    void thread_trunc_ln1503_fu_581_p1();
    void thread_trunc_ln209_fu_507_p1();
    void thread_trunc_ln215_fu_290_p1();
    void thread_zext_ln1503_8_fu_351_p1();
    void thread_zext_ln1503_9_fu_363_p1();
    void thread_zext_ln1503_fu_339_p1();
    void thread_zext_ln215_10_fu_266_p1();
    void thread_zext_ln215_11_fu_270_p1();
    void thread_zext_ln215_12_fu_274_p1();
    void thread_zext_ln215_9_fu_304_p1();
    void thread_zext_ln215_fu_262_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
