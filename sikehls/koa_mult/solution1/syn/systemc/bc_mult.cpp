// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2019.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "bc_mult.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic bc_mult::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic bc_mult::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<7> bc_mult::ap_ST_fsm_state1 = "1";
const sc_lv<7> bc_mult::ap_ST_fsm_pp0_stage0 = "10";
const sc_lv<7> bc_mult::ap_ST_fsm_state8 = "100";
const sc_lv<7> bc_mult::ap_ST_fsm_state9 = "1000";
const sc_lv<7> bc_mult::ap_ST_fsm_state10 = "10000";
const sc_lv<7> bc_mult::ap_ST_fsm_state11 = "100000";
const sc_lv<7> bc_mult::ap_ST_fsm_state12 = "1000000";
const bool bc_mult::ap_const_boolean_1 = true;
const sc_lv<32> bc_mult::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> bc_mult::ap_const_lv32_1 = "1";
const bool bc_mult::ap_const_boolean_0 = false;
const sc_lv<1> bc_mult::ap_const_lv1_0 = "0";
const sc_lv<32> bc_mult::ap_const_lv32_3 = "11";
const sc_lv<1> bc_mult::ap_const_lv1_1 = "1";
const sc_lv<32> bc_mult::ap_const_lv32_4 = "100";
const sc_lv<32> bc_mult::ap_const_lv32_5 = "101";
const sc_lv<3> bc_mult::ap_const_lv3_0 = "000";
const sc_lv<323> bc_mult::ap_const_lv323_lc_1 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> bc_mult::ap_const_lv32_2 = "10";
const sc_lv<387> bc_mult::ap_const_lv387_lc_1 = "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<448> bc_mult::ap_const_lv448_lc_1 = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<2> bc_mult::ap_const_lv2_0 = "00";
const sc_lv<2> bc_mult::ap_const_lv2_1 = "1";
const sc_lv<2> bc_mult::ap_const_lv2_2 = "10";
const sc_lv<2> bc_mult::ap_const_lv2_3 = "11";
const sc_lv<32> bc_mult::ap_const_lv32_40 = "1000000";
const sc_lv<32> bc_mult::ap_const_lv32_7F = "1111111";
const sc_lv<32> bc_mult::ap_const_lv32_80 = "10000000";
const sc_lv<32> bc_mult::ap_const_lv32_BF = "10111111";
const sc_lv<32> bc_mult::ap_const_lv32_C0 = "11000000";
const sc_lv<32> bc_mult::ap_const_lv32_DF = "11011111";
const sc_lv<3> bc_mult::ap_const_lv3_4 = "100";
const sc_lv<3> bc_mult::ap_const_lv3_1 = "1";
const sc_lv<64> bc_mult::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<128> bc_mult::ap_const_lv128_lc_1 = "00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<192> bc_mult::ap_const_lv192_lc_1 = "000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> bc_mult::ap_const_lv32_6 = "110";

bc_mult::bc_mult(sc_module_name name) : sc_module(name), mVcdFile(0) {
    koa_mult_h1_mux_4bkb_U1 = new koa_mult_h1_mux_4bkb<1,1,64,64,64,64,2,64>("koa_mult_h1_mux_4bkb_U1");
    koa_mult_h1_mux_4bkb_U1->din0(ai_0_V_reg_757);
    koa_mult_h1_mux_4bkb_U1->din1(ai_1_V_reg_762);
    koa_mult_h1_mux_4bkb_U1->din2(ai_2_V_reg_767);
    koa_mult_h1_mux_4bkb_U1->din3(ai_3_V_reg_772);
    koa_mult_h1_mux_4bkb_U1->din4(tmp_3_fu_294_p5);
    koa_mult_h1_mux_4bkb_U1->dout(tmp_3_fu_294_p6);
    koa_mult_h1_mul_6cud_U2 = new koa_mult_h1_mul_6cud<1,5,64,64,128>("koa_mult_h1_mul_6cud_U2");
    koa_mult_h1_mul_6cud_U2->clk(ap_clk);
    koa_mult_h1_mul_6cud_U2->reset(ap_rst);
    koa_mult_h1_mul_6cud_U2->din0(grp_fu_307_p0);
    koa_mult_h1_mul_6cud_U2->din1(grp_fu_307_p1);
    koa_mult_h1_mul_6cud_U2->ce(ap_var_for_const0);
    koa_mult_h1_mul_6cud_U2->dout(grp_fu_307_p2);
    koa_mult_h1_mul_6cud_U3 = new koa_mult_h1_mul_6cud<1,5,64,64,128>("koa_mult_h1_mul_6cud_U3");
    koa_mult_h1_mul_6cud_U3->clk(ap_clk);
    koa_mult_h1_mul_6cud_U3->reset(ap_rst);
    koa_mult_h1_mul_6cud_U3->din0(grp_fu_312_p0);
    koa_mult_h1_mul_6cud_U3->din1(grp_fu_312_p1);
    koa_mult_h1_mul_6cud_U3->ce(ap_var_for_const0);
    koa_mult_h1_mul_6cud_U3->dout(grp_fu_312_p2);
    koa_mult_h1_mul_6cud_U4 = new koa_mult_h1_mul_6cud<1,5,64,64,128>("koa_mult_h1_mul_6cud_U4");
    koa_mult_h1_mul_6cud_U4->clk(ap_clk);
    koa_mult_h1_mul_6cud_U4->reset(ap_rst);
    koa_mult_h1_mul_6cud_U4->din0(grp_fu_317_p0);
    koa_mult_h1_mul_6cud_U4->din1(grp_fu_317_p1);
    koa_mult_h1_mul_6cud_U4->ce(ap_var_for_const0);
    koa_mult_h1_mul_6cud_U4->dout(grp_fu_317_p2);
    koa_mult_h1_mul_6cud_U5 = new koa_mult_h1_mul_6cud<1,5,64,64,128>("koa_mult_h1_mul_6cud_U5");
    koa_mult_h1_mul_6cud_U5->clk(ap_clk);
    koa_mult_h1_mul_6cud_U5->reset(ap_rst);
    koa_mult_h1_mul_6cud_U5->din0(grp_fu_322_p0);
    koa_mult_h1_mul_6cud_U5->din1(grp_fu_322_p1);
    koa_mult_h1_mul_6cud_U5->ce(ap_var_for_const0);
    koa_mult_h1_mul_6cud_U5->dout(grp_fu_322_p2);
    koa_mult_h1_mux_4dEe_U6 = new koa_mult_h1_mux_4dEe<1,1,321,321,321,321,2,321>("koa_mult_h1_mux_4dEe_U6");
    koa_mult_h1_mux_4dEe_U6->din0(partial_products_3_25_fu_84);
    koa_mult_h1_mux_4dEe_U6->din1(partial_products_0_24_fu_88);
    koa_mult_h1_mux_4dEe_U6->din2(partial_products_0_23_fu_92);
    koa_mult_h1_mux_4dEe_U6->din3(partial_products_0_s_fu_96);
    koa_mult_h1_mux_4dEe_U6->din4(trunc_ln209_fu_507_p1);
    koa_mult_h1_mux_4dEe_U6->dout(tmp_4_fu_511_p6);
    koa_mult_h1_add_3eOg_U7 = new koa_mult_h1_add_3eOg<1,2,323,323,323>("koa_mult_h1_add_3eOg_U7");
    koa_mult_h1_add_3eOg_U7->clk(ap_clk);
    koa_mult_h1_add_3eOg_U7->reset(ap_rst);
    koa_mult_h1_add_3eOg_U7->din0(grp_fu_529_p0);
    koa_mult_h1_add_3eOg_U7->din1(sum_V_0_0_reg_165);
    koa_mult_h1_add_3eOg_U7->ce(ap_var_for_const0);
    koa_mult_h1_add_3eOg_U7->dout(grp_fu_529_p2);
    koa_mult_h1_mux_4dEe_U8 = new koa_mult_h1_mux_4dEe<1,1,321,321,321,321,2,321>("koa_mult_h1_mux_4dEe_U8");
    koa_mult_h1_mux_4dEe_U8->din0(partial_products_3_26_fu_100);
    koa_mult_h1_mux_4dEe_U8->din1(partial_products_1_16_fu_104);
    koa_mult_h1_mux_4dEe_U8->din2(partial_products_1_15_fu_108);
    koa_mult_h1_mux_4dEe_U8->din3(partial_products_1_s_fu_112);
    koa_mult_h1_mux_4dEe_U8->din4(trunc_ln209_fu_507_p1);
    koa_mult_h1_mux_4dEe_U8->dout(tmp_5_fu_535_p6);
    koa_mult_h1_add_3fYi_U9 = new koa_mult_h1_add_3fYi<1,2,387,387,387>("koa_mult_h1_add_3fYi_U9");
    koa_mult_h1_add_3fYi_U9->clk(ap_clk);
    koa_mult_h1_add_3fYi_U9->reset(ap_rst);
    koa_mult_h1_add_3fYi_U9->din0(grp_fu_561_p0);
    koa_mult_h1_add_3fYi_U9->din1(sum_V_1_0_reg_177);
    koa_mult_h1_add_3fYi_U9->ce(ap_var_for_const0);
    koa_mult_h1_add_3fYi_U9->dout(grp_fu_561_p2);
    koa_mult_h1_mux_4dEe_U10 = new koa_mult_h1_mux_4dEe<1,1,321,321,321,321,2,321>("koa_mult_h1_mux_4dEe_U10");
    koa_mult_h1_mux_4dEe_U10->din0(partial_products_3_27_fu_116);
    koa_mult_h1_mux_4dEe_U10->din1(partial_products_2_16_fu_120);
    koa_mult_h1_mux_4dEe_U10->din2(partial_products_2_15_fu_124);
    koa_mult_h1_mux_4dEe_U10->din3(partial_products_2_s_fu_128);
    koa_mult_h1_mux_4dEe_U10->din4(trunc_ln209_fu_507_p1);
    koa_mult_h1_mux_4dEe_U10->dout(tmp_6_fu_567_p6);
    koa_mult_h1_add_4g8j_U11 = new koa_mult_h1_add_4g8j<1,2,448,448,448>("koa_mult_h1_add_4g8j_U11");
    koa_mult_h1_add_4g8j_U11->clk(ap_clk);
    koa_mult_h1_add_4g8j_U11->reset(ap_rst);
    koa_mult_h1_add_4g8j_U11->din0(grp_fu_593_p0);
    koa_mult_h1_add_4g8j_U11->din1(sum_V_2_0_reg_189);
    koa_mult_h1_add_4g8j_U11->ce(ap_var_for_const0);
    koa_mult_h1_add_4g8j_U11->dout(grp_fu_593_p2);
    koa_mult_h1_mux_4dEe_U12 = new koa_mult_h1_mux_4dEe<1,1,321,321,321,321,2,321>("koa_mult_h1_mux_4dEe_U12");
    koa_mult_h1_mux_4dEe_U12->din0(partial_products_3_28_fu_132);
    koa_mult_h1_mux_4dEe_U12->din1(partial_products_3_16_fu_136);
    koa_mult_h1_mux_4dEe_U12->din2(partial_products_3_15_fu_140);
    koa_mult_h1_mux_4dEe_U12->din3(partial_products_3_s_fu_144);
    koa_mult_h1_mux_4dEe_U12->din4(trunc_ln209_fu_507_p1);
    koa_mult_h1_mux_4dEe_U12->dout(tmp_7_fu_599_p6);
    koa_mult_h1_add_4g8j_U13 = new koa_mult_h1_add_4g8j<1,2,448,448,448>("koa_mult_h1_add_4g8j_U13");
    koa_mult_h1_add_4g8j_U13->clk(ap_clk);
    koa_mult_h1_add_4g8j_U13->reset(ap_rst);
    koa_mult_h1_add_4g8j_U13->din0(grp_fu_625_p0);
    koa_mult_h1_add_4g8j_U13->din1(sum_V_3_0_reg_201);
    koa_mult_h1_add_4g8j_U13->ce(ap_var_for_const0);
    koa_mult_h1_add_4g8j_U13->dout(grp_fu_625_p2);
    koa_mult_h1_add_3hbi_U14 = new koa_mult_h1_add_3hbi<1,2,388,388,388>("koa_mult_h1_add_3hbi_U14");
    koa_mult_h1_add_3hbi_U14->clk(ap_clk);
    koa_mult_h1_add_3hbi_U14->reset(ap_rst);
    koa_mult_h1_add_3hbi_U14->din0(grp_fu_639_p0);
    koa_mult_h1_add_3hbi_U14->din1(grp_fu_639_p1);
    koa_mult_h1_add_3hbi_U14->ce(ap_var_for_const0);
    koa_mult_h1_add_3hbi_U14->dout(grp_fu_639_p2);
    koa_mult_h1_add_4g8j_U15 = new koa_mult_h1_add_4g8j<1,2,448,448,448>("koa_mult_h1_add_4g8j_U15");
    koa_mult_h1_add_4g8j_U15->clk(ap_clk);
    koa_mult_h1_add_4g8j_U15->reset(ap_rst);
    koa_mult_h1_add_4g8j_U15->din0(sum_V_2_0_reg_189);
    koa_mult_h1_add_4g8j_U15->din1(sum_V_3_0_reg_201);
    koa_mult_h1_add_4g8j_U15->ce(ap_var_for_const0);
    koa_mult_h1_add_4g8j_U15->dout(grp_fu_645_p2);
    koa_mult_h1_add_4g8j_U16 = new koa_mult_h1_add_4g8j<1,2,448,448,448>("koa_mult_h1_add_4g8j_U16");
    koa_mult_h1_add_4g8j_U16->clk(ap_clk);
    koa_mult_h1_add_4g8j_U16->reset(ap_rst);
    koa_mult_h1_add_4g8j_U16->din0(grp_fu_645_p2);
    koa_mult_h1_add_4g8j_U16->din1(grp_fu_655_p1);
    koa_mult_h1_add_4g8j_U16->ce(ap_var_for_const0);
    koa_mult_h1_add_4g8j_U16->dout(grp_fu_655_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ai_0_V_fu_224_p1);
    sensitive << ( ta_V );

    SC_METHOD(thread_ai_1_V_fu_228_p4);
    sensitive << ( ta_V );

    SC_METHOD(thread_ai_2_V_fu_238_p4);
    sensitive << ( ta_V );

    SC_METHOD(thread_ai_3_V_fu_258_p1);
    sensitive << ( tmp_fu_248_p4 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state12);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter1);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter2);

    SC_METHOD(thread_ap_block_state5_pp0_stage0_iter3);

    SC_METHOD(thread_ap_block_state6_pp0_stage0_iter4);

    SC_METHOD(thread_ap_block_state7_pp0_stage0_iter5);

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state2);
    sensitive << ( icmp_ln202_fu_278_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter2 );
    sensitive << ( ap_enable_reg_pp0_iter3 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_ap_return);
    sensitive << ( grp_fu_655_p2 );
    sensitive << ( ap_return_preg );
    sensitive << ( ap_CS_fsm_state12 );

    SC_METHOD(thread_grp_fu_307_p0);
    sensitive << ( zext_ln215_reg_777 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_307_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( zext_ln215_9_fu_304_p1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_312_p0);
    sensitive << ( zext_ln215_10_reg_782 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_312_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( zext_ln215_9_fu_304_p1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_317_p0);
    sensitive << ( zext_ln215_11_reg_787 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_317_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( zext_ln215_9_fu_304_p1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_322_p0);
    sensitive << ( zext_ln215_12_reg_792 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_322_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( zext_ln215_9_fu_304_p1 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_grp_fu_529_p0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( tmp_4_fu_511_p6 );

    SC_METHOD(thread_grp_fu_561_p0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( shl_ln_fu_549_p3 );

    SC_METHOD(thread_grp_fu_593_p0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( trunc_ln1503_fu_581_p1 );

    SC_METHOD(thread_grp_fu_625_p0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( trunc_ln1503_2_fu_613_p1 );

    SC_METHOD(thread_grp_fu_639_p0);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( sum_V_1_0_reg_177 );

    SC_METHOD(thread_grp_fu_639_p1);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( sum_V_0_0_reg_165 );

    SC_METHOD(thread_grp_fu_655_p1);
    sensitive << ( ap_CS_fsm_state11 );
    sensitive << ( grp_fu_639_p2 );

    SC_METHOD(thread_i_3_fu_284_p2);
    sensitive << ( i7_0_reg_154 );

    SC_METHOD(thread_i_fu_453_p2);
    sensitive << ( i8_0_reg_213 );

    SC_METHOD(thread_icmp_ln202_fu_278_p2);
    sensitive << ( i7_0_reg_154 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln213_fu_447_p2);
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( i8_0_reg_213 );

    SC_METHOD(thread_partial_products_0_19_fu_327_p1);
    sensitive << ( grp_fu_307_p2 );

    SC_METHOD(thread_partial_products_0_20_fu_331_p3);
    sensitive << ( grp_fu_312_p2 );

    SC_METHOD(thread_partial_products_0_21_fu_343_p3);
    sensitive << ( grp_fu_317_p2 );

    SC_METHOD(thread_partial_products_0_22_fu_355_p3);
    sensitive << ( grp_fu_322_p2 );

    SC_METHOD(thread_shl_ln_fu_549_p3);
    sensitive << ( tmp_5_fu_535_p6 );

    SC_METHOD(thread_tmp_3_fu_294_p5);
    sensitive << ( i7_0_reg_154 );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0 );

    SC_METHOD(thread_tmp_fu_248_p4);
    sensitive << ( ta_V );

    SC_METHOD(thread_trunc_ln1503_2_fu_613_p1);
    sensitive << ( tmp_7_fu_599_p6 );

    SC_METHOD(thread_trunc_ln1503_fu_581_p1);
    sensitive << ( tmp_6_fu_567_p6 );

    SC_METHOD(thread_trunc_ln209_fu_507_p1);
    sensitive << ( i8_0_reg_213 );

    SC_METHOD(thread_trunc_ln215_fu_290_p1);
    sensitive << ( i7_0_reg_154 );

    SC_METHOD(thread_zext_ln1503_8_fu_351_p1);
    sensitive << ( partial_products_0_21_fu_343_p3 );

    SC_METHOD(thread_zext_ln1503_9_fu_363_p1);
    sensitive << ( partial_products_0_22_fu_355_p3 );

    SC_METHOD(thread_zext_ln1503_fu_339_p1);
    sensitive << ( partial_products_0_20_fu_331_p3 );

    SC_METHOD(thread_zext_ln215_10_fu_266_p1);
    sensitive << ( ai_1_V_fu_228_p4 );

    SC_METHOD(thread_zext_ln215_11_fu_270_p1);
    sensitive << ( ai_2_V_fu_238_p4 );

    SC_METHOD(thread_zext_ln215_12_fu_274_p1);
    sensitive << ( ai_3_V_fu_258_p1 );

    SC_METHOD(thread_zext_ln215_9_fu_304_p1);
    sensitive << ( tmp_3_reg_810 );

    SC_METHOD(thread_zext_ln215_fu_262_p1);
    sensitive << ( ai_0_V_fu_224_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln202_fu_278_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_CS_fsm_state9 );
    sensitive << ( icmp_ln213_fu_447_p2 );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter4 );
    sensitive << ( ap_enable_reg_pp0_iter5 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "0000001";
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter2 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter3 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter4 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter5 = SC_LOGIC_0;
    ap_return_preg = "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "bc_mult_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ta_V, "(port)ta_V");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, i7_0_reg_154, "i7_0_reg_154");
    sc_trace(mVcdFile, ai_0_V_fu_224_p1, "ai_0_V_fu_224_p1");
    sc_trace(mVcdFile, ai_0_V_reg_757, "ai_0_V_reg_757");
    sc_trace(mVcdFile, ai_1_V_fu_228_p4, "ai_1_V_fu_228_p4");
    sc_trace(mVcdFile, ai_1_V_reg_762, "ai_1_V_reg_762");
    sc_trace(mVcdFile, ai_2_V_fu_238_p4, "ai_2_V_fu_238_p4");
    sc_trace(mVcdFile, ai_2_V_reg_767, "ai_2_V_reg_767");
    sc_trace(mVcdFile, ai_3_V_fu_258_p1, "ai_3_V_fu_258_p1");
    sc_trace(mVcdFile, ai_3_V_reg_772, "ai_3_V_reg_772");
    sc_trace(mVcdFile, zext_ln215_fu_262_p1, "zext_ln215_fu_262_p1");
    sc_trace(mVcdFile, zext_ln215_reg_777, "zext_ln215_reg_777");
    sc_trace(mVcdFile, zext_ln215_10_fu_266_p1, "zext_ln215_10_fu_266_p1");
    sc_trace(mVcdFile, zext_ln215_10_reg_782, "zext_ln215_10_reg_782");
    sc_trace(mVcdFile, zext_ln215_11_fu_270_p1, "zext_ln215_11_fu_270_p1");
    sc_trace(mVcdFile, zext_ln215_11_reg_787, "zext_ln215_11_reg_787");
    sc_trace(mVcdFile, zext_ln215_12_fu_274_p1, "zext_ln215_12_fu_274_p1");
    sc_trace(mVcdFile, zext_ln215_12_reg_792, "zext_ln215_12_reg_792");
    sc_trace(mVcdFile, icmp_ln202_fu_278_p2, "icmp_ln202_fu_278_p2");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter0, "ap_block_state2_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter1, "ap_block_state3_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter2, "ap_block_state4_pp0_stage0_iter2");
    sc_trace(mVcdFile, ap_block_state5_pp0_stage0_iter3, "ap_block_state5_pp0_stage0_iter3");
    sc_trace(mVcdFile, ap_block_state6_pp0_stage0_iter4, "ap_block_state6_pp0_stage0_iter4");
    sc_trace(mVcdFile, ap_block_state7_pp0_stage0_iter5, "ap_block_state7_pp0_stage0_iter5");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_3_fu_284_p2, "i_3_fu_284_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, trunc_ln215_fu_290_p1, "trunc_ln215_fu_290_p1");
    sc_trace(mVcdFile, trunc_ln215_reg_806, "trunc_ln215_reg_806");
    sc_trace(mVcdFile, trunc_ln215_reg_806_pp0_iter1_reg, "trunc_ln215_reg_806_pp0_iter1_reg");
    sc_trace(mVcdFile, trunc_ln215_reg_806_pp0_iter2_reg, "trunc_ln215_reg_806_pp0_iter2_reg");
    sc_trace(mVcdFile, trunc_ln215_reg_806_pp0_iter3_reg, "trunc_ln215_reg_806_pp0_iter3_reg");
    sc_trace(mVcdFile, trunc_ln215_reg_806_pp0_iter4_reg, "trunc_ln215_reg_806_pp0_iter4_reg");
    sc_trace(mVcdFile, tmp_3_fu_294_p6, "tmp_3_fu_294_p6");
    sc_trace(mVcdFile, tmp_3_reg_810, "tmp_3_reg_810");
    sc_trace(mVcdFile, zext_ln215_9_fu_304_p1, "zext_ln215_9_fu_304_p1");
    sc_trace(mVcdFile, i_fu_453_p2, "i_fu_453_p2");
    sc_trace(mVcdFile, i_reg_826, "i_reg_826");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, icmp_ln213_fu_447_p2, "icmp_ln213_fu_447_p2");
    sc_trace(mVcdFile, grp_fu_529_p2, "grp_fu_529_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, grp_fu_561_p2, "grp_fu_561_p2");
    sc_trace(mVcdFile, grp_fu_593_p2, "grp_fu_593_p2");
    sc_trace(mVcdFile, grp_fu_625_p2, "grp_fu_625_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, grp_fu_645_p2, "grp_fu_645_p2");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state2, "ap_condition_pp0_exit_iter0_state2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter2, "ap_enable_reg_pp0_iter2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter3, "ap_enable_reg_pp0_iter3");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter4, "ap_enable_reg_pp0_iter4");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter5, "ap_enable_reg_pp0_iter5");
    sc_trace(mVcdFile, sum_V_0_0_reg_165, "sum_V_0_0_reg_165");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, sum_V_1_0_reg_177, "sum_V_1_0_reg_177");
    sc_trace(mVcdFile, sum_V_2_0_reg_189, "sum_V_2_0_reg_189");
    sc_trace(mVcdFile, sum_V_3_0_reg_201, "sum_V_3_0_reg_201");
    sc_trace(mVcdFile, i8_0_reg_213, "i8_0_reg_213");
    sc_trace(mVcdFile, partial_products_3_25_fu_84, "partial_products_3_25_fu_84");
    sc_trace(mVcdFile, partial_products_0_19_fu_327_p1, "partial_products_0_19_fu_327_p1");
    sc_trace(mVcdFile, partial_products_0_24_fu_88, "partial_products_0_24_fu_88");
    sc_trace(mVcdFile, zext_ln1503_fu_339_p1, "zext_ln1503_fu_339_p1");
    sc_trace(mVcdFile, partial_products_0_23_fu_92, "partial_products_0_23_fu_92");
    sc_trace(mVcdFile, zext_ln1503_8_fu_351_p1, "zext_ln1503_8_fu_351_p1");
    sc_trace(mVcdFile, partial_products_0_s_fu_96, "partial_products_0_s_fu_96");
    sc_trace(mVcdFile, zext_ln1503_9_fu_363_p1, "zext_ln1503_9_fu_363_p1");
    sc_trace(mVcdFile, partial_products_3_26_fu_100, "partial_products_3_26_fu_100");
    sc_trace(mVcdFile, partial_products_1_16_fu_104, "partial_products_1_16_fu_104");
    sc_trace(mVcdFile, partial_products_1_15_fu_108, "partial_products_1_15_fu_108");
    sc_trace(mVcdFile, partial_products_1_s_fu_112, "partial_products_1_s_fu_112");
    sc_trace(mVcdFile, partial_products_3_27_fu_116, "partial_products_3_27_fu_116");
    sc_trace(mVcdFile, partial_products_2_16_fu_120, "partial_products_2_16_fu_120");
    sc_trace(mVcdFile, partial_products_2_15_fu_124, "partial_products_2_15_fu_124");
    sc_trace(mVcdFile, partial_products_2_s_fu_128, "partial_products_2_s_fu_128");
    sc_trace(mVcdFile, partial_products_3_28_fu_132, "partial_products_3_28_fu_132");
    sc_trace(mVcdFile, partial_products_3_16_fu_136, "partial_products_3_16_fu_136");
    sc_trace(mVcdFile, partial_products_3_15_fu_140, "partial_products_3_15_fu_140");
    sc_trace(mVcdFile, partial_products_3_s_fu_144, "partial_products_3_s_fu_144");
    sc_trace(mVcdFile, tmp_fu_248_p4, "tmp_fu_248_p4");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, tmp_3_fu_294_p5, "tmp_3_fu_294_p5");
    sc_trace(mVcdFile, grp_fu_307_p0, "grp_fu_307_p0");
    sc_trace(mVcdFile, grp_fu_307_p1, "grp_fu_307_p1");
    sc_trace(mVcdFile, grp_fu_312_p0, "grp_fu_312_p0");
    sc_trace(mVcdFile, grp_fu_312_p1, "grp_fu_312_p1");
    sc_trace(mVcdFile, grp_fu_317_p0, "grp_fu_317_p0");
    sc_trace(mVcdFile, grp_fu_317_p1, "grp_fu_317_p1");
    sc_trace(mVcdFile, grp_fu_322_p0, "grp_fu_322_p0");
    sc_trace(mVcdFile, grp_fu_322_p1, "grp_fu_322_p1");
    sc_trace(mVcdFile, grp_fu_307_p2, "grp_fu_307_p2");
    sc_trace(mVcdFile, grp_fu_312_p2, "grp_fu_312_p2");
    sc_trace(mVcdFile, partial_products_0_20_fu_331_p3, "partial_products_0_20_fu_331_p3");
    sc_trace(mVcdFile, grp_fu_317_p2, "grp_fu_317_p2");
    sc_trace(mVcdFile, partial_products_0_21_fu_343_p3, "partial_products_0_21_fu_343_p3");
    sc_trace(mVcdFile, grp_fu_322_p2, "grp_fu_322_p2");
    sc_trace(mVcdFile, partial_products_0_22_fu_355_p3, "partial_products_0_22_fu_355_p3");
    sc_trace(mVcdFile, trunc_ln209_fu_507_p1, "trunc_ln209_fu_507_p1");
    sc_trace(mVcdFile, tmp_4_fu_511_p6, "tmp_4_fu_511_p6");
    sc_trace(mVcdFile, grp_fu_529_p0, "grp_fu_529_p0");
    sc_trace(mVcdFile, tmp_5_fu_535_p6, "tmp_5_fu_535_p6");
    sc_trace(mVcdFile, shl_ln_fu_549_p3, "shl_ln_fu_549_p3");
    sc_trace(mVcdFile, grp_fu_561_p0, "grp_fu_561_p0");
    sc_trace(mVcdFile, tmp_6_fu_567_p6, "tmp_6_fu_567_p6");
    sc_trace(mVcdFile, trunc_ln1503_fu_581_p1, "trunc_ln1503_fu_581_p1");
    sc_trace(mVcdFile, grp_fu_593_p0, "grp_fu_593_p0");
    sc_trace(mVcdFile, tmp_7_fu_599_p6, "tmp_7_fu_599_p6");
    sc_trace(mVcdFile, trunc_ln1503_2_fu_613_p1, "trunc_ln1503_2_fu_613_p1");
    sc_trace(mVcdFile, grp_fu_625_p0, "grp_fu_625_p0");
    sc_trace(mVcdFile, grp_fu_639_p0, "grp_fu_639_p0");
    sc_trace(mVcdFile, grp_fu_639_p1, "grp_fu_639_p1");
    sc_trace(mVcdFile, grp_fu_639_p2, "grp_fu_639_p2");
    sc_trace(mVcdFile, grp_fu_655_p1, "grp_fu_655_p1");
    sc_trace(mVcdFile, grp_fu_655_p2, "grp_fu_655_p2");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_CS_fsm_state12, "ap_CS_fsm_state12");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

bc_mult::~bc_mult() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete koa_mult_h1_mux_4bkb_U1;
    delete koa_mult_h1_mul_6cud_U2;
    delete koa_mult_h1_mul_6cud_U3;
    delete koa_mult_h1_mul_6cud_U4;
    delete koa_mult_h1_mul_6cud_U5;
    delete koa_mult_h1_mux_4dEe_U6;
    delete koa_mult_h1_add_3eOg_U7;
    delete koa_mult_h1_mux_4dEe_U8;
    delete koa_mult_h1_add_3fYi_U9;
    delete koa_mult_h1_mux_4dEe_U10;
    delete koa_mult_h1_add_4g8j_U11;
    delete koa_mult_h1_mux_4dEe_U12;
    delete koa_mult_h1_add_4g8j_U13;
    delete koa_mult_h1_add_3hbi_U14;
    delete koa_mult_h1_add_4g8j_U15;
    delete koa_mult_h1_add_4g8j_U16;
}

void bc_mult::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void bc_mult::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            if (esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state2.read())) {
                ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state2.read() ^ ap_const_logic_1);
            } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
                ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
            }
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter2 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter2 = ap_enable_reg_pp0_iter1.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter3 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter3 = ap_enable_reg_pp0_iter2.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter4 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter4 = ap_enable_reg_pp0_iter3.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter5 = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter5 = ap_enable_reg_pp0_iter4.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                    esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter5 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv448_lc_1;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
            ap_return_preg = grp_fu_655_p2.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln202_fu_278_p2.read(), ap_const_lv1_0))) {
        i7_0_reg_154 = i_3_fu_284_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i7_0_reg_154 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        i8_0_reg_213 = ap_const_lv3_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        i8_0_reg_213 = i_reg_826.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sum_V_0_0_reg_165 = ap_const_lv323_lc_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        sum_V_0_0_reg_165 = grp_fu_529_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sum_V_1_0_reg_177 = ap_const_lv387_lc_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        sum_V_1_0_reg_177 = grp_fu_561_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sum_V_2_0_reg_189 = ap_const_lv448_lc_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        sum_V_2_0_reg_189 = grp_fu_593_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        sum_V_3_0_reg_201 = ap_const_lv448_lc_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        sum_V_3_0_reg_201 = grp_fu_625_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        ai_0_V_reg_757 = ai_0_V_fu_224_p1.read();
        ai_1_V_reg_762 = ta_V.read().range(127, 64);
        ai_2_V_reg_767 = ta_V.read().range(191, 128);
        ai_3_V_reg_772 = ai_3_V_fu_258_p1.read();
        zext_ln215_10_reg_782 = zext_ln215_10_fu_266_p1.read();
        zext_ln215_11_reg_787 = zext_ln215_11_fu_270_p1.read();
        zext_ln215_12_reg_792 = zext_ln215_12_fu_274_p1.read();
        zext_ln215_reg_777 = zext_ln215_fu_262_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_reg_826 = i_fu_453_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && esl_seteq<1,2,2>(trunc_ln215_reg_806_pp0_iter4_reg.read(), ap_const_lv2_0))) {
        partial_products_0_23_fu_92 = zext_ln1503_8_fu_351_p1.read();
        partial_products_0_24_fu_88 = zext_ln1503_fu_339_p1.read();
        partial_products_0_s_fu_96 = zext_ln1503_9_fu_363_p1.read();
        partial_products_3_25_fu_84 = partial_products_0_19_fu_327_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && esl_seteq<1,2,2>(trunc_ln215_reg_806_pp0_iter4_reg.read(), ap_const_lv2_1))) {
        partial_products_1_15_fu_108 = zext_ln1503_8_fu_351_p1.read();
        partial_products_1_16_fu_104 = zext_ln1503_fu_339_p1.read();
        partial_products_1_s_fu_112 = zext_ln1503_9_fu_363_p1.read();
        partial_products_3_26_fu_100 = partial_products_0_19_fu_327_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && esl_seteq<1,2,2>(trunc_ln215_reg_806_pp0_iter4_reg.read(), ap_const_lv2_2))) {
        partial_products_2_15_fu_124 = zext_ln1503_8_fu_351_p1.read();
        partial_products_2_16_fu_120 = zext_ln1503_fu_339_p1.read();
        partial_products_2_s_fu_128 = zext_ln1503_9_fu_363_p1.read();
        partial_products_3_27_fu_116 = partial_products_0_19_fu_327_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && esl_seteq<1,2,2>(trunc_ln215_reg_806_pp0_iter4_reg.read(), ap_const_lv2_3))) {
        partial_products_3_15_fu_140 = zext_ln1503_8_fu_351_p1.read();
        partial_products_3_16_fu_136 = zext_ln1503_fu_339_p1.read();
        partial_products_3_28_fu_132 = partial_products_0_19_fu_327_p1.read();
        partial_products_3_s_fu_144 = zext_ln1503_9_fu_363_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln202_fu_278_p2.read(), ap_const_lv1_0))) {
        tmp_3_reg_810 = tmp_3_fu_294_p6.read();
        trunc_ln215_reg_806 = trunc_ln215_fu_290_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        trunc_ln215_reg_806_pp0_iter1_reg = trunc_ln215_reg_806.read();
    }
    if (esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0)) {
        trunc_ln215_reg_806_pp0_iter2_reg = trunc_ln215_reg_806_pp0_iter1_reg.read();
        trunc_ln215_reg_806_pp0_iter3_reg = trunc_ln215_reg_806_pp0_iter2_reg.read();
        trunc_ln215_reg_806_pp0_iter4_reg = trunc_ln215_reg_806_pp0_iter3_reg.read();
    }
}

void bc_mult::thread_ai_0_V_fu_224_p1() {
    ai_0_V_fu_224_p1 = ta_V.read().range(64-1, 0);
}

void bc_mult::thread_ai_1_V_fu_228_p4() {
    ai_1_V_fu_228_p4 = ta_V.read().range(127, 64);
}

void bc_mult::thread_ai_2_V_fu_238_p4() {
    ai_2_V_fu_238_p4 = ta_V.read().range(191, 128);
}

void bc_mult::thread_ai_3_V_fu_258_p1() {
    ai_3_V_fu_258_p1 = esl_sext<64,32>(tmp_fu_248_p4.read());
}

void bc_mult::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[1];
}

void bc_mult::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void bc_mult::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[4];
}

void bc_mult::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[5];
}

void bc_mult::thread_ap_CS_fsm_state12() {
    ap_CS_fsm_state12 = ap_CS_fsm.read()[6];
}

void bc_mult::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[2];
}

void bc_mult::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[3];
}

void bc_mult::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bc_mult::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bc_mult::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bc_mult::thread_ap_block_state2_pp0_stage0_iter0() {
    ap_block_state2_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bc_mult::thread_ap_block_state3_pp0_stage0_iter1() {
    ap_block_state3_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bc_mult::thread_ap_block_state4_pp0_stage0_iter2() {
    ap_block_state4_pp0_stage0_iter2 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bc_mult::thread_ap_block_state5_pp0_stage0_iter3() {
    ap_block_state5_pp0_stage0_iter3 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bc_mult::thread_ap_block_state6_pp0_stage0_iter4() {
    ap_block_state6_pp0_stage0_iter4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bc_mult::thread_ap_block_state7_pp0_stage0_iter5() {
    ap_block_state7_pp0_stage0_iter5 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void bc_mult::thread_ap_condition_pp0_exit_iter0_state2() {
    if (esl_seteq<1,1,1>(icmp_ln202_fu_278_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state2 = ap_const_logic_0;
    }
}

void bc_mult::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void bc_mult::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void bc_mult::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void bc_mult::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter2.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter3.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter4.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter5.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void bc_mult::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void bc_mult::thread_ap_return() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state12.read())) {
        ap_return = grp_fu_655_p2.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void bc_mult::thread_grp_fu_307_p0() {
    grp_fu_307_p0 =  (sc_lv<64>) (zext_ln215_reg_777.read());
}

void bc_mult::thread_grp_fu_307_p1() {
    grp_fu_307_p1 =  (sc_lv<64>) (zext_ln215_9_fu_304_p1.read());
}

void bc_mult::thread_grp_fu_312_p0() {
    grp_fu_312_p0 =  (sc_lv<64>) (zext_ln215_10_reg_782.read());
}

void bc_mult::thread_grp_fu_312_p1() {
    grp_fu_312_p1 =  (sc_lv<64>) (zext_ln215_9_fu_304_p1.read());
}

void bc_mult::thread_grp_fu_317_p0() {
    grp_fu_317_p0 =  (sc_lv<64>) (zext_ln215_11_reg_787.read());
}

void bc_mult::thread_grp_fu_317_p1() {
    grp_fu_317_p1 =  (sc_lv<64>) (zext_ln215_9_fu_304_p1.read());
}

void bc_mult::thread_grp_fu_322_p0() {
    grp_fu_322_p0 =  (sc_lv<64>) (zext_ln215_12_reg_792.read());
}

void bc_mult::thread_grp_fu_322_p1() {
    grp_fu_322_p1 =  (sc_lv<64>) (zext_ln215_9_fu_304_p1.read());
}

void bc_mult::thread_grp_fu_529_p0() {
    grp_fu_529_p0 = esl_zext<323,321>(tmp_4_fu_511_p6.read());
}

void bc_mult::thread_grp_fu_561_p0() {
    grp_fu_561_p0 = esl_zext<387,385>(shl_ln_fu_549_p3.read());
}

void bc_mult::thread_grp_fu_593_p0() {
    grp_fu_593_p0 = esl_concat<320,128>(trunc_ln1503_fu_581_p1.read(), ap_const_lv128_lc_1);
}

void bc_mult::thread_grp_fu_625_p0() {
    grp_fu_625_p0 = esl_concat<256,192>(trunc_ln1503_2_fu_613_p1.read(), ap_const_lv192_lc_1);
}

void bc_mult::thread_grp_fu_639_p0() {
    grp_fu_639_p0 = esl_zext<388,387>(sum_V_1_0_reg_177.read());
}

void bc_mult::thread_grp_fu_639_p1() {
    grp_fu_639_p1 = esl_zext<388,323>(sum_V_0_0_reg_165.read());
}

void bc_mult::thread_grp_fu_655_p1() {
    grp_fu_655_p1 = esl_zext<448,388>(grp_fu_639_p2.read());
}

void bc_mult::thread_i_3_fu_284_p2() {
    i_3_fu_284_p2 = (!i7_0_reg_154.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i7_0_reg_154.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void bc_mult::thread_i_fu_453_p2() {
    i_fu_453_p2 = (!i8_0_reg_213.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i8_0_reg_213.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void bc_mult::thread_icmp_ln202_fu_278_p2() {
    icmp_ln202_fu_278_p2 = (!i7_0_reg_154.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i7_0_reg_154.read() == ap_const_lv3_4);
}

void bc_mult::thread_icmp_ln213_fu_447_p2() {
    icmp_ln213_fu_447_p2 = (!i8_0_reg_213.read().is_01() || !ap_const_lv3_4.is_01())? sc_lv<1>(): sc_lv<1>(i8_0_reg_213.read() == ap_const_lv3_4);
}

void bc_mult::thread_partial_products_0_19_fu_327_p1() {
    partial_products_0_19_fu_327_p1 = esl_zext<321,128>(grp_fu_307_p2.read());
}

void bc_mult::thread_partial_products_0_20_fu_331_p3() {
    partial_products_0_20_fu_331_p3 = esl_concat<128,64>(grp_fu_312_p2.read(), ap_const_lv64_0);
}

void bc_mult::thread_partial_products_0_21_fu_343_p3() {
    partial_products_0_21_fu_343_p3 = esl_concat<128,128>(grp_fu_317_p2.read(), ap_const_lv128_lc_1);
}

void bc_mult::thread_partial_products_0_22_fu_355_p3() {
    partial_products_0_22_fu_355_p3 = esl_concat<128,192>(grp_fu_322_p2.read(), ap_const_lv192_lc_1);
}

void bc_mult::thread_shl_ln_fu_549_p3() {
    shl_ln_fu_549_p3 = esl_concat<321,64>(tmp_5_fu_535_p6.read(), ap_const_lv64_0);
}

void bc_mult::thread_tmp_3_fu_294_p5() {
    tmp_3_fu_294_p5 = i7_0_reg_154.read().range(2-1, 0);
}

void bc_mult::thread_tmp_fu_248_p4() {
    tmp_fu_248_p4 = ta_V.read().range(223, 192);
}

void bc_mult::thread_trunc_ln1503_2_fu_613_p1() {
    trunc_ln1503_2_fu_613_p1 = tmp_7_fu_599_p6.read().range(256-1, 0);
}

void bc_mult::thread_trunc_ln1503_fu_581_p1() {
    trunc_ln1503_fu_581_p1 = tmp_6_fu_567_p6.read().range(320-1, 0);
}

void bc_mult::thread_trunc_ln209_fu_507_p1() {
    trunc_ln209_fu_507_p1 = i8_0_reg_213.read().range(2-1, 0);
}

void bc_mult::thread_trunc_ln215_fu_290_p1() {
    trunc_ln215_fu_290_p1 = i7_0_reg_154.read().range(2-1, 0);
}

void bc_mult::thread_zext_ln1503_8_fu_351_p1() {
    zext_ln1503_8_fu_351_p1 = esl_zext<321,256>(partial_products_0_21_fu_343_p3.read());
}

void bc_mult::thread_zext_ln1503_9_fu_363_p1() {
    zext_ln1503_9_fu_363_p1 = esl_zext<321,320>(partial_products_0_22_fu_355_p3.read());
}

void bc_mult::thread_zext_ln1503_fu_339_p1() {
    zext_ln1503_fu_339_p1 = esl_zext<321,192>(partial_products_0_20_fu_331_p3.read());
}

void bc_mult::thread_zext_ln215_10_fu_266_p1() {
    zext_ln215_10_fu_266_p1 = esl_zext<128,64>(ai_1_V_fu_228_p4.read());
}

void bc_mult::thread_zext_ln215_11_fu_270_p1() {
    zext_ln215_11_fu_270_p1 = esl_zext<128,64>(ai_2_V_fu_238_p4.read());
}

void bc_mult::thread_zext_ln215_12_fu_274_p1() {
    zext_ln215_12_fu_274_p1 = esl_zext<128,64>(ai_3_V_fu_258_p1.read());
}

void bc_mult::thread_zext_ln215_9_fu_304_p1() {
    zext_ln215_9_fu_304_p1 = esl_zext<128,64>(tmp_3_reg_810.read());
}

void bc_mult::thread_zext_ln215_fu_262_p1() {
    zext_ln215_fu_262_p1 = esl_zext<128,64>(ai_0_V_fu_224_p1.read());
}

void bc_mult::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((!(esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter4.read(), ap_const_logic_0)) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln202_fu_278_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if (((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter5.read()) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter4.read(), ap_const_logic_0)) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
  esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
  esl_seteq<1,1,1>(icmp_ln202_fu_278_p2.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_enable_reg_pp0_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read()) && esl_seteq<1,1,1>(icmp_ln213_fu_447_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXXXXX";
            break;
    }
}

}

